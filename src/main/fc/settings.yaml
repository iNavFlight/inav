tables:
  - name: alignment
    values: ["DEFAULT", "CW0", "CW90", "CW180", "CW270", "CW0FLIP", "CW90FLIP", "CW180FLIP", "CW270FLIP"]
  - name: acc_hardware
    values: ["NONE", "AUTO", "MPU6000", "MPU6500", "MPU9250", "BMI160", "ICM20689", "BMI088", "ICM42605", "BMI270","LSM6DXX",  "FAKE"]
    enum: accelerationSensor_e
  - name: rangefinder_hardware
    values: ["NONE", "SRF10", "VL53L0X", "MSP", "BENEWAKE", "VL53L1X", "US42", "TOF10120_I2C", "FAKE", "TERARANGER_EVO", "USD1_V0", "NRA"]
    enum: rangefinderType_e
  - name: mag_hardware
    values: ["NONE", "AUTO", "HMC5883", "AK8975", "MAG3110", "AK8963", "IST8310", "QMC5883", "MPU9250", "IST8308", "LIS3MDL", "MSP", "RM3100", "VCM5883", "MLX90393", "FAKE"]
    enum: magSensor_e
  - name: opflow_hardware
    values: ["NONE", "CXOF", "MSP", "FAKE"]
    enum: opticalFlowSensor_e
  - name: baro_hardware
    values: ["NONE", "AUTO", "BMP085", "MS5611", "BMP280", "MS5607", "LPS25H", "SPL06", "BMP388", "DPS310", "B2SMPB", "MSP", "FAKE"]
    enum: baroSensor_e
  - name: pitot_hardware
    values: ["NONE", "AUTO", "MS4525", "ADC", "VIRTUAL", "FAKE", "MSP", "DLVR-L10D"]
    enum: pitotSensor_e
  - name: receiver_type
    values: ["NONE", "SERIAL", "MSP", "SIM (SITL)"]
    enum: rxReceiverType_e
  - name: serial_rx
    values: ["SPEK1024", "SPEK2048", "SBUS", "SUMD", "IBUS", "JETIEXBUS", "CRSF", "FPORT", "SBUS_FAST", "FPORT2", "SRXL2", "GHST", "MAVLINK", "FBUS", "SBUS2"]
  - name: blackbox_device
    values: ["SERIAL", "SPIFLASH", "SDCARD", "FILE"]
  - name: motor_pwm_protocol
    values: ["STANDARD", "ONESHOT125", "MULTISHOT", "BRUSHED", "DSHOT150", "DSHOT300", "DSHOT600"]
  - name: servo_protocol
    values: ["PWM", "SBUS", "SBUS_PWM"]
  - name: failsafe_procedure
    values: ["LAND", "DROP", "RTH", "NONE"]
  - name: current_sensor
    values: ["NONE", "ADC", "VIRTUAL", "FAKE", "ESC"]
    enum: currentSensor_e
  - name: voltage_sensor
    values: ["NONE", "ADC", "ESC", "FAKE"]
    enum: voltageSensor_e
  - name: imu_inertia_comp_method
    values: ["VELNED", "TURNRATE","ADAPTIVE"]
    enum: imu_inertia_comp_method_e
  - name: gps_provider
    values: ["UBLOX", "MSP", "FAKE"]
    enum: gpsProvider_e
  - name: gps_sbas_mode
    values: ["AUTO", "EGNOS", "WAAS", "MSAS", "GAGAN", "SPAN", "NONE"]
    enum: sbasMode_e
  - name: gps_dyn_model
    values: ["PEDESTRIAN","AUTOMOTIVE", "AIR_1G", "AIR_2G", "AIR_4G", "SEA", "MOWER"]
    enum: gpsDynModel_e
  - name: reset_type
    values: ["NEVER", "FIRST_ARM", "EACH_ARM"]
  - name: direction
    values: ["RIGHT", "LEFT", "YAW"]
  - name: nav_user_control_mode
    values: ["ATTI", "CRUISE"]
  - name: nav_rth_alt_mode
    values: ["CURRENT", "EXTRA", "FIXED", "MAX", "AT_LEAST"]
  - name: nav_rth_climb_first_stage_modes
    values: ["AT_LEAST", "EXTRA"]
  - name: osd_unit
    values: ["IMPERIAL", "METRIC", "METRIC_MPH", "UK", "GA"]
    enum: osd_unit_e
  - name: osd_stats_energy_unit
    values: ["MAH", "WH"]
    enum: osd_stats_energy_unit_e
  - name: osd_video_system
    values: ["AUTO", "PAL", "NTSC", "HDZERO", "DJIWTF", "AVATAR", "BF43COMPAT", "BFHDCOMPAT"]
    enum: videoSystem_e
  - name: osd_telemetry
    values: ["OFF", "ON","TEST"]
    enum: osd_telemetry_e
  - name: osd_alignment
    values: ["LEFT", "RIGHT"]
    enum: osd_alignment_e
  - name: ltm_rates
    values: ["NORMAL", "MEDIUM", "SLOW"]
  - name: i2c_speed
    values: ["400KHZ", "800KHZ", "100KHZ", "200KHZ"]
  - name: debug_modes
    values: ["NONE", "AGL", "FLOW_RAW", "FLOW", "ALWAYS", "SAG_COMP_VOLTAGE",
      "VIBE", "CRUISE", "REM_FLIGHT_TIME", "SMARTAUDIO", "ACC",
      "NAV_YAW", "PCF8574", "DYN_GYRO_LPF", "AUTOLEVEL", "ALTITUDE",
      "AUTOTRIM", "AUTOTUNE", "RATE_DYNAMICS", "LANDING", "POS_EST",
      "ADAPTIVE_FILTER", "HEADTRACKER", "GPS", "LULU", "SBUS2"]
  - name: aux_operator
    values: ["OR", "AND"]
    enum: modeActivationOperator_e
  - name: osd_crosshairs_style
    values: ["DEFAULT", "AIRCRAFT", "TYPE3", "TYPE4", "TYPE5", "TYPE6", "TYPE7", "TYPE8"]
    enum: osd_crosshairs_style_e
  - name: osd_sidebar_scroll
    values: ["NONE", "ALTITUDE", "SPEED", "HOME_DISTANCE"]
    enum: osd_sidebar_scroll_e
  - name: nav_rth_allow_landing
    values: ["NEVER", "ALWAYS", "FS_ONLY"]
    enum: navRTHAllowLanding_e
  - name: bat_capacity_unit
    values: ["MAH", "MWH"]
    enum: batCapacityUnit_e
  - name: bat_voltage_source
    values: ["RAW", "SAG_COMP"]
    enum: batVoltageSource_e
  - name: smartport_fuel_unit
    values: ["PERCENT", "MAH", "MWH"]
    enum: smartportFuelUnit_e
  - name: platform_type
    values: ["MULTIROTOR", "AIRPLANE", "HELICOPTER", "TRICOPTER", "ROVER", "BOAT"]
  - name: tz_automatic_dst
    values: ["OFF", "EU", "USA"]
    enum: tz_automatic_dst_e
  - name: vtx_low_power_disarm
    values: ["OFF", "ON", "UNTIL_FIRST_ARM"]
    enum: vtxLowerPowerDisarm_e
  - name: vtx_frequency_groups
    values: ["FREQUENCYGROUP_5G8", "FREQUENCYGROUP_2G4", "FREQUENCYGROUP_1G3"]
    enum: vtxFrequencyGroups_e
  - name: filter_type
    values: ["PT1", "BIQUAD"]
  - name: filter_type_full
    values: ["PT1", "BIQUAD", "PT2", "PT3", "LULU"]
  - name: log_level
    values: ["ERROR", "WARNING", "INFO", "VERBOSE", "DEBUG"]
  - name: iterm_relax
    values: ["OFF", "RP", "RPY"]
    enum: itermRelax_e
  - name: airmodeHandlingType
    values: ["STICK_CENTER", "THROTTLE_THRESHOLD", "STICK_CENTER_ONCE"]
  - name: nav_extra_arming_safety
    values: ["ON", "ALLOW_BYPASS"]
    enum: navExtraArmingSafety_e
  - name: rssi_source
    values: ["NONE", "AUTO", "ADC", "CHANNEL", "PROTOCOL", "MSP"]
    enum: rssiSource_e
  - name: pidTypeTable
    values: ["NONE", "PID", "PIFF", "AUTO"]
    enum: pidType_e
  - name: osd_ahi_style
    values: ["DEFAULT", "LINE"]
    enum: osd_ahi_style_e
  - name: tristate
    enum: tristate_e
    values: ["AUTO", "ON", "OFF"]
  - name: osd_crsf_lq_format
    enum: osd_crsf_lq_format_e
    values: ["TYPE1", "TYPE2", "TYPE3"]
  - name: off_on
    values: ["OFF", "ON"]
  - name: djiOsdTempSource
    values: ["ESC", "IMU", "BARO"]
    enum: djiOsdTempSource_e
  - name: osdSpeedSource
    values: ["GROUND", "3D", "AIR"]
    enum: osdSpeedSource_e
  - name: nav_overrides_motor_stop
    enum: navOverridesMotorStop_e
    values: ["OFF_ALWAYS", "OFF", "AUTO_ONLY", "ALL_NAV"]
  - name: osd_plus_code_short
    values: ["0", "2", "4", "6"]
  - name: autotune_rate_adjustment
    enum: autotune_rate_adjustment_e
    values: ["FIXED", "LIMIT", "AUTO"]
  - name: safehome_usage_mode
    values: ["OFF", "RTH", "RTH_FS"]
    enum: safehomeUsageMode_e
  - name: nav_rth_climb_first
    enum: navRTHClimbFirst_e
    values: ["OFF", "ON", "ON_FW_SPIRAL"]
  - name: nav_wp_mission_restart
    enum: navMissionRestart_e
    values: ["START", "RESUME", "SWITCH"]
  - name: djiRssiSource
    values: ["RSSI", "CRSF_LQ"]
    enum: djiRssiSource_e
  - name: rth_trackback_mode
    values: ["OFF", "ON", "FS"]
    enum: rthTrackbackMode_e
  - name: dynamic_gyro_notch_mode
    values: ["2D", "3D"]
    enum: dynamicGyroNotchMode_e
  - name: nav_fw_wp_turn_smoothing
    values: ["OFF", "ON", "ON-CUT"]
    enum: wpFwTurnSmoothing_e
  - name: gps_auto_baud_max
    values: [ '115200', '57600', '38400', '19200', '9600', '230400', '460800', '921600']
    enum: gpsBaudRate_e
  - name: nav_mc_althold_throttle
    values: ["STICK", "MID_STICK", "HOVER"]
    enum: navMcAltHoldThrottle_e
  - name: led_pin_pwm_mode
    values: ["SHARED_LOW", "SHARED_HIGH", "LOW", "HIGH"]
    enum: led_pin_pwm_mode_e
  - name: gyro_filter_mode
    values: ["OFF", "STATIC", "DYNAMIC", "ADAPTIVE"]
    enum: gyroFilterType_e
  - name: headtracker_dev_type
    values: ["NONE", "SERIAL", "MSP"]
    enum: headTrackerDevType_e
  - name: mavlink_radio_type
    values: ["GENERIC", "ELRS", "SIK"]
    enum: mavlinkRadio_e
  - name: default_altitude_source
    values: ["GPS", "BARO", "GPS_ONLY", "BARO_ONLY"]
    enum: navDefaultAltitudeSensor_e
  - name: fence_action
    values: ["NONE", "AVOID", "POS_HOLD", "RTH"]
    enum: fenceAction_e
  - name: geozone_rth_no_way_home
    values: [RTH, EMRG_LAND]

constants:
  RPYL_PID_MIN: 0
  RPYL_PID_MAX: 255

  MANUAL_RATE_MIN: 0
  MANUAL_RATE_MAX: 100

  ROLL_PITCH_RATE_MIN: 4
  ROLL_PITCH_RATE_MAX: 180

  MAX_CONTROL_RATE_PROFILE_COUNT: 3
  MAX_BATTERY_PROFILE_COUNT: 3


groups:
  - name: PG_GYRO_CONFIG
    type: gyroConfig_t
    headers: ["sensors/gyro.h"]
    members:
      - name: looptime
        description: "This is the main loop time (in us). Changing this affects PID effect with some PID controllers (see PID section for details). A very conservative value of 3500us/285Hz should work for everyone. Setting it to zero does not limit loop time, so it will go as fast as possible."
        default_value: 500
        max: 9000
      - name: gyro_anti_aliasing_lpf_hz
        description: "Gyro processing anti-aliasing filter cutoff frequency. In normal operation this filter setting should never be changed. In Hz"
        default_value: 250
        field: gyro_anti_aliasing_lpf_hz
        max: 1000
      - name: gyro_lulu_enabled
        description: "Enable/disable gyro LULU filter"
        default_value: OFF
        field: gyroLuluEnabled
        type: bool
      - name: gyro_lulu_sample_count
        description: "Gyro lulu sample count, in number of samples."
        default_value: 3
        field: gyroLuluSampleCount
        min: 1
        max: 15
      - name: gyro_main_lpf_hz
        description: "Software based gyro main lowpass filter. Value is cutoff frequency (Hz)"
        default_value: 60
        field: gyro_main_lpf_hz
        min: 0
        max: 500
      - name: gyro_filter_mode
        description: "Specifies the type of the software LPF of the gyro signals."
        default_value: "STATIC"
        field: gyroFilterMode
        table: gyro_filter_mode
      - name: gyro_dyn_lpf_min_hz
        description: "Minimum frequency of the gyro Dynamic LPF"
        default_value: 200
        field: gyroDynamicLpfMinHz
        min: 40
        max: 400
      - name: gyro_dyn_lpf_max_hz
        description: "Maximum frequency of the gyro Dynamic LPF"
        default_value: 500
        field: gyroDynamicLpfMaxHz
        min: 40
        max: 1000
      - name: gyro_dyn_lpf_curve_expo
        description: "Expo value for the throttle-to-frequency mapping for Dynamic LPF"
        default_value: 5
        field: gyroDynamicLpfCurveExpo
        min: 1
        max: 10
      - name: dynamic_gyro_notch_enabled
        description: "Enable/disable dynamic gyro notch also known as Matrix Filter"
        default_value: ON
        field: dynamicGyroNotchEnabled
        condition: USE_DYNAMIC_FILTERS
        type: bool
      - name: dynamic_gyro_notch_q
        description: "Q factor for dynamic notches"
        default_value: 120
        field: dynamicGyroNotchQ
        condition: USE_DYNAMIC_FILTERS
        min: 1
        max: 1000
      - name: dynamic_gyro_notch_min_hz
        description: "Minimum frequency for dynamic notches. Default value of `150` works best with 5\" multirotors. Should be lowered with increased size of propellers. Values around `100` work fine on 7\" drones. 10\" can go down to `60` - `70`"
        default_value: 50
        field: dynamicGyroNotchMinHz
        condition: USE_DYNAMIC_FILTERS
        min: 30
        max: 250
      - name: dynamic_gyro_notch_mode
        description: "Gyro dynamic notch type"
        default_value: "2D"
        table: dynamic_gyro_notch_mode
        field: dynamicGyroNotchMode
        condition: USE_DYNAMIC_FILTERS
      - name: dynamic_gyro_notch_3d_q
        description: "Q factor for 3D dynamic notches"
        default_value: 200
        field: dynamicGyroNotch3dQ
        condition: USE_DYNAMIC_FILTERS
        min: 1
        max: 1000
      - name: gyro_to_use
        description: "On multi-gyro targets, allows to choose which gyro to use. 0 = first gyro, 1 = second gyro"
        condition: USE_DUAL_GYRO
        min: 0
        max: 2
        default_value: 0
      - name: setpoint_kalman_enabled
        description: "Enable Kalman filter on the gyro data"
        default_value: ON
        condition: USE_GYRO_KALMAN
        field: kalmanEnabled
        type: bool
      - name: setpoint_kalman_q
        description: "Quality factor of the setpoint Kalman filter. Higher values means less filtering and lower phase delay. On 3-7 inch multirotors can be usually increased to 200-300 or even higher of clean builds"
        default_value: 100
        field: kalman_q
        condition: USE_GYRO_KALMAN
        min: 1
        max: 1000
      - name: init_gyro_cal
        description: "If defined to 'OFF', it will ignore the gyroscope calibration done at each startup. Instead, the gyroscope last calibration from when you calibrated will be used. It also means you don't have to keep the UAV stationary during a startup."
        default_value: ON
        field: init_gyro_cal_enabled
        type: bool
      - name: gyro_zero_x
        description: "Calculated gyro zero calibration of axis X"
        default_value: 0
        field: gyro_zero_cal[X]
        min: INT16_MIN
        max: INT16_MAX
      - name: gyro_zero_y
        description: "Calculated gyro zero calibration of axis Y"
        default_value: 0
        field: gyro_zero_cal[Y]
        min: INT16_MIN
        max: INT16_MAX
      - name: gyro_zero_z
        description: "Calculated gyro zero calibration of axis Z"
        default_value: 0
        field: gyro_zero_cal[Z]
        min: INT16_MIN
        max: INT16_MAX
      - name: ins_gravity_cmss
        description: "Calculated 1G of Acc axis Z to use in INS"
        default_value: 0.0
        field: gravity_cmss_cal
        min: 0
        max: 2000
      - name: gyro_adaptive_filter_target
        description: "Target value for adaptive filter"
        default_value: 3.5
        field: adaptiveFilterTarget
        min: 1
        max: 6
        condition: USE_ADAPTIVE_FILTER
      - name: gyro_adaptive_filter_min_hz
        description: "Minimum frequency for adaptive filter"
        default_value: 50
        field: adaptiveFilterMinHz
        min: 0
        max: 250
        condition: USE_ADAPTIVE_FILTER
      - name: gyro_adaptive_filter_max_hz
        description: "Maximum frequency for adaptive filter"
        default_value: 150
        field: adaptiveFilterMaxHz
        min: 0
        max: 505
        condition: USE_ADAPTIVE_FILTER
      - name: gyro_adaptive_filter_std_lpf_hz
        description: "Standard deviation low pass filter cutoff frequency"
        default_value: 2
        field: adaptiveFilterStdLpfHz
        min: 0
        max: 10
        condition: USE_ADAPTIVE_FILTER
      - name: gyro_adaptive_filter_hpf_hz
        description: "High pass filter cutoff frequency"
        default_value: 10
        field: adaptiveFilterHpfHz
        min: 1
        max: 50
        condition: USE_ADAPTIVE_FILTER
      - name: gyro_adaptive_filter_integrator_threshold_high
        description: "High threshold for adaptive filter integrator"
        default_value: 4
        field: adaptiveFilterIntegratorThresholdHigh
        min: 1
        max: 10
        condition: USE_ADAPTIVE_FILTER
      - name: gyro_adaptive_filter_integrator_threshold_low
        description: "Low threshold for adaptive filter integrator"
        default_value: -2
        field: adaptiveFilterIntegratorThresholdLow
        min: -10
        max: 0
        condition: USE_ADAPTIVE_FILTER

  - name: PG_ADC_CHANNEL_CONFIG
    type: adcChannelConfig_t
    headers: ["fc/config.h"]
    condition: USE_ADC
    members:
      - name: vbat_adc_channel
        description: "ADC channel to use for battery voltage sensor. Defaults to board VBAT input (if available). 0 = disabled"
        default_value: :target
        field: adcFunctionChannel[ADC_BATTERY]
        min: ADC_CHN_NONE
        max: ADC_CHN_MAX
      - name: rssi_adc_channel
        description: "ADC channel to use for analog RSSI input. Defaults to board RSSI input (if available). 0 = disabled"
        default_value: :target
        field: adcFunctionChannel[ADC_RSSI]
        min: ADC_CHN_NONE
        max: ADC_CHN_MAX
      - name: current_adc_channel
        description: "ADC channel to use for analog current sensor input. Defaults to board CURRENT sensor input (if available). 0 = disabled"
        default_value: :target
        field: adcFunctionChannel[ADC_CURRENT]
        min: ADC_CHN_NONE
        max: ADC_CHN_MAX
      - name: airspeed_adc_channel
        description: "ADC channel to use for analog pitot tube (airspeed) sensor. If board doesn't have a dedicated connector for analog airspeed sensor will default to 0"
        default_value: :target
        field: adcFunctionChannel[ADC_AIRSPEED]
        min: ADC_CHN_NONE
        max: ADC_CHN_MAX

  - name: PG_ACCELEROMETER_CONFIG
    type: accelerometerConfig_t
    headers: ["sensors/acceleration.h"]
    members:
      - name: acc_notch_hz
        description: "Frequency of the software notch filter to remove mechanical vibrations from the accelerometer measurements. Value is center frequency (Hz)"
        min: 0
        max: 255
        default_value: 0
      - name: acc_notch_cutoff
        description: "Frequency of the software notch filter to remove mechanical vibrations from the accelerometer measurements. Value is cutoff frequency (Hz)"
        min: 1
        max: 255
        default_value: 1
      - name: acc_hardware
        description: "Selection of acc hardware. See Wiki Sensor auto detect and hardware failure detection for more info"
        default_value: "AUTO"
        table: acc_hardware
      - name: acc_lpf_hz
        description: "Software-based filter to remove mechanical vibrations from the accelerometer measurements. Value is cutoff frequency (Hz). For larger frames with bigger props set to lower value."
        default_value: 15
        min: 0
        max: 200
      - name: acc_lpf_type
        description: "Specifies the type of the software LPF of the acc signals. BIQUAD gives better filtering and more delay, PT1 less filtering and less delay, so use only on clean builds."
        default_value: "BIQUAD"
        field: acc_soft_lpf_type
        table: filter_type
      - name: acczero_x
        description: "Calculated value after '6 position avanced calibration'. See Wiki page."
        default_value: 0
        field: accZero.raw[X]
        min: INT16_MIN
        max: INT16_MAX
      - name: acczero_y
        description: "Calculated value after '6 position avanced calibration'. See Wiki page."
        default_value: 0
        field: accZero.raw[Y]
        min: INT16_MIN
        max: INT16_MAX
      - name: acczero_z
        description: "Calculated value after '6 position avanced calibration'. See Wiki page."
        default_value: 0
        field: accZero.raw[Z]
        min: INT16_MIN
        max: INT16_MAX
      - name: accgain_x
        description: "Calculated value after '6 position avanced calibration'. Uncalibrated value is 4096. See Wiki page."
        default_value: 4096
        field: accGain.raw[X]
        min: 1
        max: 8192
      - name: accgain_y
        description: "Calculated value after '6 position avanced calibration'. Uncalibrated value is 4096. See Wiki page."
        default_value: 4096
        field: accGain.raw[Y]
        min: 1
        max: 8192
      - name: accgain_z
        description: "Calculated value after '6 position avanced calibration'. Uncalibrated value is 4096. See Wiki page."
        default_value: 4096
        field: accGain.raw[Z]
        min: 1
        max: 8192

  - name: PG_RANGEFINDER_CONFIG
    type: rangefinderConfig_t
    headers: ["sensors/rangefinder.h"]
    condition: USE_RANGEFINDER
    members:
      - name: rangefinder_hardware
        table: rangefinder_hardware
        description: "Selection of rangefinder hardware."
        default_value: "NONE"
      - name: rangefinder_median_filter
        description: "3-point median filtering for rangefinder readouts"
        default_value: OFF
        field: use_median_filtering
        type: bool

  - name: PG_OPFLOW_CONFIG
    type: opticalFlowConfig_t
    headers: ["sensors/opflow.h"]
    condition: USE_OPFLOW
    members:
      - name: opflow_hardware
        description: "Selection of OPFLOW hardware."
        default_value: NONE
        table: opflow_hardware
      - name: opflow_scale
        description: "Optical flow module scale factor"
        min: 0
        max: 10000
        default_value: 10.5
      - name: align_opflow
        description: "Optical flow module alignment (default CW0_DEG_FLIP)"
        default_value: CW0FLIP
        field: opflow_align
        type: uint8_t
        table: alignment

  - name: PG_COMPASS_CONFIG
    type: compassConfig_t
    headers: ["sensors/compass.h"]
    condition: USE_MAG
    members:
      - name: align_mag
        description: "When running on non-default hardware or adding support for new sensors/sensor boards, these values are used for sensor orientation. When carefully understood, these values can also be used to rotate (in 90deg steps) or flip the board. Possible values are: DEFAULT, CW0_DEG, CW90_DEG, CW180_DEG, CW270_DEG, CW0_DEG_FLIP, CW90_DEG_FLIP, CW180_DEG_FLIP, CW270_DEG_FLIP."
        default_value: "DEFAULT"
        field: mag_align
        type: uint8_t
        table: alignment
      - name: mag_hardware
        description: "Selection of mag hardware. See Wiki Sensor auto detect and hardware failure detection for more info"
        default_value: "AUTO"
        table: mag_hardware
      - name: mag_declination
        description: "Current location magnetic declination in format. For example, -6deg 37min = -637 for Japan. Leading zero in ddd not required. Get your local magnetic declination here: http://magnetic-declination.com/ . Not in use if inav_auto_mag_decl is turned on and you acquire valid GPS fix."
        default_value: 0
        min: -18000
        max: 18000
      - name: magzero_x
        description: "Magnetometer calibration X offset. If its 0 none offset has been applied and calibration is failed."
        default_value: :zero
        field: magZero.raw[X]
        min: INT16_MIN
        max: INT16_MAX
      - name: magzero_y
        description: "Magnetometer calibration Y offset. If its 0 none offset has been applied and calibration is failed."
        default_value: :zero
        field: magZero.raw[Y]
        min: INT16_MIN
        max: INT16_MAX
      - name: magzero_z
        description: "Magnetometer calibration Z offset. If its 0 none offset has been applied and calibration is failed."
        default_value: :zero
        field: magZero.raw[Z]
        min: INT16_MIN
        max: INT16_MAX
      - name: maggain_x
        description: "Magnetometer calibration X gain. If 1024, no calibration or calibration failed"
        default_value: 1024
        field: magGain[X]
        min: INT16_MIN
        max: INT16_MAX
      - name: maggain_y
        description: "Magnetometer calibration Y gain. If 1024, no calibration or calibration failed"
        default_value: 1024
        field: magGain[Y]
        min: INT16_MIN
        max: INT16_MAX
      - name: maggain_z
        description: "Magnetometer calibration Z gain. If 1024, no calibration or calibration failed"
        default_value: 1024
        field: magGain[Z]
        min: INT16_MIN
        max: INT16_MAX
      - name: mag_calibration_time
        description: "Adjust how long time the Calibration of mag will last."
        default_value: 30
        field: magCalibrationTimeLimit
        min: 20
        max: 120
      - name: mag_to_use
        description: "Allow to chose between built-in and external compass sensor if they are connected to separate buses. Currently only for REVO target"
        condition: USE_DUAL_MAG
        min: 0
        max: 1
        default_value: 0
      - name: align_mag_roll
        description: "Set the external mag alignment on the roll axis (in 0.1 degree steps). If this value is non-zero, the compass is assumed to be externally mounted and both the board and on-board compass alignent (align_mag) are ignored. See also align_mag_pitch and align_mag_yaw."
        default_value: 0
        field: rollDeciDegrees
        min: -1800
        max: 3600
      - name: align_mag_pitch
        description: "Same as align_mag_roll, but for the pitch axis."
        default_value: 0
        field: pitchDeciDegrees
        min: -1800
        max: 3600
      - name: align_mag_yaw
        description: "Same as align_mag_roll, but for the yaw axis."
        default_value: 0
        field: yawDeciDegrees
        min: -1800
        max: 3600

  - name: PG_BAROMETER_CONFIG
    type: barometerConfig_t
    headers: ["sensors/barometer.h"]
    condition: USE_BARO
    members:
      - name: baro_hardware
        description: "Selection of baro hardware. See Wiki Sensor auto detect and hardware failure detection for more info"
        default_value: "AUTO"
        table: baro_hardware
      - name: baro_cal_tolerance
        description: "Baro calibration tolerance in cm. The default should allow the noisiest baro to complete calibration [cm]."
        default_value: 150
        field: baro_calibration_tolerance
        min: 0
        max: 1000

  - name: PG_PITOTMETER_CONFIG
    type: pitotmeterConfig_t
    headers: ["sensors/pitotmeter.h"]
    condition: USE_PITOT
    members:
      - name: pitot_hardware
        description: "Selection of pitot hardware."
        default_value: "NONE"
        table: pitot_hardware
      - name: pitot_lpf_milli_hz
        description: "Pitot tube lowpass filter cutoff frequency. Lower cutoff frequencies result in smoother response at expense of command control delay"
        min: 0
        max: 10000
        default_value: 350
      - name: pitot_scale
        description: "Pitot tube scale factor"
        min: 0
        max: 100
        default_value: 1.0

  - name: PG_RX_CONFIG
    type: rxConfig_t
    headers: ["rx/rx.h", "rx/spektrum.h"]
    members:
      - name: receiver_type
        description: "Selection of receiver (RX) type. Additional configuration of a `serialrx_provider` and a UART will be needed for `SERIAL`"
        default_value: :target
        field: receiverType
        table: receiver_type
      - name: min_check
        description: "These are min/max values (in us) which, when a channel is smaller (min) or larger (max) than the value will activate various RC commands, such as arming, or stick configuration. Normally, every RC channel should be set so that min = 1000us, max = 2000us. On most transmitters this usually means 125% endpoints. Default check values are 100us above/below this value."
        default_value: 1100
        field: mincheck
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX
      - name: max_check
        description: "These are min/max values (in us) which, when a channel is smaller (min) or larger (max) than the value will activate various RC commands, such as arming, or stick configuration. Normally, every RC channel should be set so that min = 1000us, max = 2000us. On most transmitters this usually means 125% endpoints. Default check values are 100us above/below this value."
        default_value: 1900
        field: maxcheck
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX
      - name: rssi_source
        description: "Source of RSSI input. Possible values: `NONE`, `AUTO`, `ADC`, `CHANNEL`, `PROTOCOL`, `MSP`"
        default_value: "AUTO"
        field: rssi_source
        table: rssi_source
      - name: rssi_channel
        description: "RX channel containing the RSSI signal"
        default_value: 0
        min: 0
        max: MAX_SUPPORTED_RC_CHANNEL_COUNT
      - name: rssi_min
        description: "The minimum RSSI value sent by the receiver, in %. For example, if your receiver's minimum RSSI value shows as 42% in the configurator/OSD set this parameter to 42. See also rssi_max. Note that rssi_min can be set to a value bigger than rssi_max to invert the RSSI calculation (i.e. bigger values mean lower RSSI)."
        default_value: 0
        field: rssiMin
        min: RSSI_VISIBLE_VALUE_MIN
        max: RSSI_VISIBLE_VALUE_MAX
      - name: rssi_max
        description: "The maximum RSSI value sent by the receiver, in %. For example, if your receiver's maximum RSSI value shows as 83% in the configurator/OSD set this parameter to 83. See also rssi_min."
        default_value: 100
        field: rssiMax
        min: RSSI_VISIBLE_VALUE_MIN
        max: RSSI_VISIBLE_VALUE_MAX
      - name: sbus_sync_interval
        field: sbusSyncInterval
        description: "SBUS sync interval in us. Default value is 3000us. Lower values may cause issues with some receivers."
        min: 500
        max: 10000
        default_value: 3000
      - name: rc_filter_lpf_hz
        description: "RC data biquad filter cutoff frequency. Lower cutoff frequencies result in smoother response at expense of command control delay. Practical values are 20-50. Set to zero to disable entirely and use unsmoothed RC stick values"
        default_value: 50
        field: rcFilterFrequency
        min: 15
        max: 250
      - name: rc_filter_auto
        description: "When enabled, INAV will set RC filtering based on refresh rate and smoothing factor."
        type: bool
        default_value: ON
        field: autoSmooth
      - name: rc_filter_smoothing_factor
        description: "The RC filter smoothing factor. The higher the value, the more smoothing but also the more delay in response. Value 1 sets the filter at half the refresh rate. Value 100 sets the filter to aprox. 10% of the RC refresh rate"
        field: autoSmoothFactor
        default_value: 30
        min: 1
        max: 100
      - name: serialrx_provider
        description: "When feature SERIALRX is enabled, this allows connection to several receivers which output data via digital interface resembling serial. See RX section."
        default_value: :target
        condition: USE_SERIAL_RX
        table: serial_rx
      - name: serialrx_inverted
        description: "Reverse the serial inversion of the serial RX protocol. When this value is OFF, each protocol will use its default signal (e.g. SBUS will use an inverted signal). Some OpenLRS receivers produce a non-inverted SBUS signal. This setting supports this type of receivers (including modified FrSKY)."
        default_value: OFF
        condition: USE_SERIAL_RX
        type: bool
      - name: spektrum_sat_bind
        description: "0 = disabled. Used to bind the spektrum satellite to RX"
        condition: USE_SPEKTRUM_BIND
        min: SPEKTRUM_SAT_BIND_DISABLED
        max: SPEKTRUM_SAT_BIND_MAX
        default_value: :SPEKTRUM_SAT_BIND_DISABLED
      - name: srxl2_unit_id
        condition: USE_SERIALRX_SRXL2
        min: 0
        max: 15
        default_value: 1
      - name: srxl2_baud_fast
        condition: USE_SERIALRX_SRXL2
        type: bool
        default_value: ON
      - name: rx_min_usec
        description: "Defines the shortest pulse width value used when ensuring the channel value is valid. If the receiver gives a pulse value lower than this value then the channel will be marked as bad and will default to the value of mid_rc."
        default_value: 885
        min: PWM_PULSE_MIN
        max: PWM_PULSE_MAX
      - name: rx_max_usec
        description: "Defines the longest pulse width value used when ensuring the channel value is valid. If the receiver gives a pulse value higher than this value then the channel will be marked as bad and will default to the value of mid_rc."
        default_value: 2115
        min: PWM_PULSE_MIN
        max: PWM_PULSE_MAX
      - name: serialrx_halfduplex
        description: "Allow serial receiver to operate on UART TX pin. With some receivers will allow control and telemetry over a single wire."
        default_value: "AUTO"
        field: halfDuplex
        table: tristate
      - name: msp_override_channels
        description: "Mask of RX channels that may be overridden by MSP `SET_RAW_RC`. Note that this requires custom firmware with `USE_RX_MSP` and `USE_MSP_RC_OVERRIDE` compile options and the `MSP RC Override` flight mode."
        default_value: 0
        field: mspOverrideChannels
        condition: USE_MSP_RC_OVERRIDE
        min: 0
        max: 65535

  - name: PG_BLACKBOX_CONFIG
    type: blackboxConfig_t
    headers: ["blackbox/blackbox.h"]
    condition: USE_BLACKBOX
    members:
      - name: blackbox_rate_num
        description: "Blackbox logging rate numerator. Use num/denom settings to decide if a frame should be logged, allowing control of the portion of logged loop iterations"
        default_value: 1
        field: rate_num
        min: 1
        max: 65535
      - name: blackbox_rate_denom
        description: "Blackbox logging rate denominator. See blackbox_rate_num."
        default_value: 1
        field: rate_denom
        min: 1
        max: 65535
      - name: blackbox_device
        description: "Selection of where to write blackbox data"
        default_value: :target
        field: device
        table: blackbox_device
      - name: sdcard_detect_inverted
        description: "This setting drives the way SD card is detected in card slot. On some targets (AnyFC F7 clone) different card slot was used and depending of hardware revision ON or OFF setting might be required. If card is not detected, change this value."
        default_value: :target
        field: invertedCardDetection
        condition: USE_SDCARD
        type: bool

  - name: PG_MOTOR_CONFIG
    type: motorConfig_t
    headers: ["flight/mixer.h"]
    members:
      - name: min_command
        description: "This is the PWM value sent to ESCs when they are not armed. If ESCs beep slowly when powered up, try decreasing this value. It can also be used for calibrating all ESCs at once."
        default_value: 1000
        field: mincommand
        min: 0
        max: PWM_RANGE_MAX
      - name: motor_pwm_rate
        description: "Output frequency (in Hz) for motor pins.  Applies only to brushed motors. "
        default_value: 16000
        field: motorPwmRate
        min: 50
        max: 32000
      - name: motor_pwm_protocol
        description: "Protocol that is used to send motor updates to ESCs. Possible values - STANDARD, ONESHOT125, ONESHOT42, MULTISHOT, DSHOT150, DSHOT300, DSHOT600, DSHOT1200, BRUSHED"
        default_value: "ONESHOT125"
        field: motorPwmProtocol
        table: motor_pwm_protocol
      - name: motor_poles
        field: motorPoleCount
        description: "The number of motor poles. Required to compute motor RPM"
        min: 4
        max: 255
        default_value: 14

  - name: PG_FAILSAFE_CONFIG
    type: failsafeConfig_t
    headers: ["flight/failsafe.h"]
    members:
      - name: failsafe_delay
        description: "Time in deciseconds to wait before activating failsafe when signal is lost. See [Failsafe documentation](Failsafe.md#failsafe_delay)."
        default_value: 5
        min: 0
        max: 200
      - name: failsafe_recovery_delay
        description: "Time in deciseconds to wait before aborting failsafe when signal is recovered. See [Failsafe documentation](Failsafe.md#failsafe_recovery_delay)."
        default_value: 5
        min: 0
        max: 200
      - name: failsafe_off_delay
        description: "Time in deciseconds to wait before turning off motors when failsafe is activated. 0 = No timeout. See [Failsafe documentation](Failsafe.md#failsafe_off_delay)."
        default_value: 200
        min: 0
        max: 200
      - name: failsafe_throttle_low_delay
        description: "If failsafe activated when throttle is low for this much time - bypass failsafe and disarm, in 10th of seconds. 0 = No timeout"
        default_value: 0
        min: 0
        max: 300
      - name: failsafe_procedure
        description: "What failsafe procedure to initiate in Stage 2. See [Failsafe documentation](Failsafe.md#failsafe_throttle)."
        default_value: "LAND"
        table: failsafe_procedure
      - name: failsafe_stick_threshold
        description: "Threshold for stick motion to consider failsafe condition resolved. If non-zero failsafe won't clear even if RC link is restored - you have to move sticks to exit failsafe."
        default_value: 50
        field: failsafe_stick_motion_threshold
        min: 0
        max: 500
      - name: failsafe_fw_roll_angle
        description: "Amount of banking when `LAND` (or old `SET-THR`) failsafe is active on a fixed-wing machine. In 1/10 deg (deci-degrees). Negative values = left roll"
        default_value: -200
        min: -800
        max: 800
      - name: failsafe_fw_pitch_angle
        description: "Amount of dive/climb when `LAND` (or old `SET-THR`) failsafe is active on a fixed-wing machine. In 1/10 deg (deci-degrees). Negative values = climb"
        default_value: 100
        min: -800
        max: 800
      - name: failsafe_fw_yaw_rate
        description: "Requested yaw rate to execute when `LAND` (or old `SET-THR`) failsafe is active on a fixed-wing machine. In deg/s. Negative values = left turn"
        default_value: -45
        min: -1000
        max: 1000
      - name: failsafe_min_distance
        description: "If failsafe happens when craft is closer than this distance in centimeters from home, failsafe will not execute regular failsafe_procedure, but will execute procedure specified in failsafe_min_distance_procedure instead. 0 = Normal failsafe_procedure always taken."
        default_value: 0
        min: 0
        max: 65000
      - name: failsafe_min_distance_procedure
        description: "What failsafe procedure to initiate in Stage 2 when craft is closer to home than failsafe_min_distance. See [Failsafe documentation](Failsafe.md#failsafe_throttle)."
        default_value: "DROP"
        table: failsafe_procedure
      - name: failsafe_mission_delay
        description: "Applies if failsafe occurs when a WP mission is in progress. Sets the time delay in seconds between failsafe occurring and the selected failsafe procedure activating. If set to -1 the failsafe procedure won't activate at all and the mission will continue until the end."
        default_value: 0
        min: -1
        max: 600
      - name: failsafe_gps_fix_estimation_delay
        description: "Controls whether waypoint mission is allowed to proceed with gps fix estimation. Sets the time delay in seconds between gps fix lost event and RTH activation. Minimum delay is 7 seconds. If set to -1 the mission will continue until the end. With default setting(7), waypoint mission is aborted and switched to RTH with 7 seconds delay. RTH is done with GPS Fix estimation."
        condition: USE_GPS_FIX_ESTIMATION
        default_value: 7
        min: -1
        max: 600

  - name: PG_LIGHTS_CONFIG
    type: lightsConfig_t
    headers: ["io/lights.h"]
    condition: USE_LIGHTS
    members:
      - name: failsafe_lights
        description: "Enable or disable the lights when the `FAILSAFE` flight mode is enabled. The target needs to be compiled with `USE_LIGHTS` [ON/OFF]."
        default_value: ON
        field: failsafe.enabled
        type: bool
      - name: failsafe_lights_flash_period
        description: "Time in milliseconds between two flashes when `failsafe_lights` is ON and `FAILSAFE` flight mode is enabled [40-65535]."
        default_value: 1000
        field: failsafe.flash_period
        min: 40
        max: 65535
      - name: failsafe_lights_flash_on_time
        description: "Flash lights ON time in milliseconds when `failsafe_lights` is ON and `FAILSAFE` flight mode is enabled. [20-65535]."
        default_value: 100
        field: failsafe.flash_on_time
        min: 20
        max: 65535

  - name: PG_BOARD_ALIGNMENT
    type: boardAlignment_t
    headers: ["sensors/boardalignment.h"]
    members:
      - name: align_board_roll
        description: "Arbitrary board rotation in deci-degrees (0.1 degree), to allow mounting it sideways / upside down / rotated etc"
        default_value: :zero
        field: rollDeciDegrees
        min: -1800
        max: 3600
      - name: align_board_pitch
        description: "Arbitrary board rotation in deci-degrees (0.1 degree), to allow mounting it sideways / upside down / rotated etc"
        default_value: :zero
        field: pitchDeciDegrees
        min: -1800
        max: 3600
      - name: align_board_yaw
        description: "Arbitrary board rotation in deci-degrees (0.1 degree), to allow mounting it sideways / upside down / rotated etc"
        default_value: :zero
        field: yawDeciDegrees
        min: -1800
        max: 3600

  - name: PG_BATTERY_METERS_CONFIG
    type: batteryMetersConfig_t
    headers: ["sensors/battery_config_structs.h"]
    members:
      - name: vbat_meter_type
        description: "Vbat voltage source. Possible values: `NONE`, `ADC`, `ESC`. `ESC` required ESC telemetry enebled and running"
        condition: USE_ADC
        default_value: ADC
        field: voltage.type
        table: voltage_sensor
        type: uint8_t
      - name: vbat_scale
        description: "Battery voltage calibration value. 1100 = 11:1 voltage divider (10k:1k) x 100. Adjust this slightly if reported pack voltage is different from multimeter reading. You can get current voltage by typing \"status\" in cli."
        default_value: :target
        field: voltage.scale
        condition: USE_ADC
        min: 0
        max: 65535
      - name: battery_capacity_unit
        description: "Unit used for `battery_capacity`, `battery_capacity_warning` and `battery_capacity_critical` [MAH/MWH] (milliAmpere hour / milliWatt hour)."
        default_value: "MAH"
        field: capacity_unit
        table: bat_capacity_unit
        type: uint8_t
      - name: current_meter_scale
        description: "This sets the output voltage to current scaling for the current sensor in 0.1 mV/A steps. 400 is 40mV/A such as the ACS756 sensor outputs. 183 is the setting for the uberdistro with a 0.25mOhm shunt."
        default_value: :target
        field: current.scale
        min: -10000
        max: 10000
      - name: current_meter_offset
        description: "This sets the output offset voltage of the current sensor in millivolts."
        default_value: :target
        field: current.offset
        min: -32768
        max: 32767
      - name: current_meter_type
        description: "ADC , VIRTUAL, NONE. The virtual current sensor, once calibrated, estimates the current value from throttle position."
        default_value: "ADC"
        field: current.type
        table: current_sensor
        type: uint8_t
      - name: bat_voltage_src
        description: "Chose between raw and sag compensated battery voltage to use for battery alarms and telemetry. Possible values are `RAW` and `SAG_COMP`"
        default_value: "RAW"
        field: voltageSource
        table: bat_voltage_source
        type: uint8_t
      - name: cruise_power
        description: "Power draw at cruise throttle used for remaining flight time/distance estimation in 0.01W unit"
        default_value: 0
        field: cruise_power
        min: 0
        max: 4294967295
      - name: idle_power
        description: "Power draw at zero throttle used for remaining flight time/distance estimation in 0.01W unit"
        default_value: 0
        field: idle_power
        min: 0
        max: 65535
      - name: rth_energy_margin
        description: "Energy margin wanted after getting home (percent of battery energy capacity). Use for the remaining flight time/distance calculation"
        default_value: 5
        min: 0
        max: 100
      - name: thr_comp_weight
        description: "Weight used for the throttle compensation based on battery voltage. See the [battery documentation](Battery.md#automatic-throttle-compensation-based-on-battery-voltage)"
        default_value: 1
        field: throttle_compensation_weight
        min: 0
        max: 2

  - name: PG_BATTERY_PROFILES
    type: batteryProfile_t
    headers: ["sensors/battery_config_structs.h"]
    value_type: BATTERY_CONFIG_VALUE
    members:
      - name: bat_cells
        description: "Number of cells of the battery (0 = auto-detect), see battery documentation. 7S, 9S and 11S batteries cannot be auto-detected."
        default_value: 0
        field: cells
        condition: USE_ADC
        min: 0
        max: 12
      - name: vbat_cell_detect_voltage
        description: "Maximum voltage per cell, used for auto-detecting the number of cells of the battery in 0.01V units."
        default_value: 425
        field: voltage.cellDetect
        condition: USE_ADC
        min: 100
        max: 500
      - name: vbat_max_cell_voltage
        description: "Maximum voltage per cell in 0.01V units, default is 4.20V"
        default_value: 420
        field: voltage.cellMax
        condition: USE_ADC
        min: 100
        max: 500
      - name: vbat_min_cell_voltage
        description: "Minimum voltage per cell, this triggers battery out alarms, in 0.01V units, default is 330 (3.3V)"
        default_value: 330
        field: voltage.cellMin
        condition: USE_ADC
        min: 100
        max: 500
      - name: vbat_warning_cell_voltage
        description: "Warning voltage per cell, this triggers battery-warning alarms, in 0.01V units, default is 350 (3.5V)"
        default_value: 350
        field: voltage.cellWarning
        condition: USE_ADC
        min: 100
        max: 500
      - name: battery_capacity
        description: "Set the battery capacity in mAh or mWh (see `battery_capacity_unit`). Used to calculate the remaining battery capacity."
        default_value: 0
        field: capacity.value
        min: 0
        max: 4294967295
      - name: battery_capacity_warning
        description: "If the remaining battery capacity goes below this threshold the beeper will emit short beeps and the relevant OSD items will blink."
        default_value: 0
        field: capacity.warning
        min: 0
        max: 4294967295
      - name: battery_capacity_critical
        description: "If the remaining battery capacity goes below this threshold the battery is considered empty and the beeper will emit long beeps."
        default_value: 0
        field: capacity.critical
        min: 0
        max: 4294967295
      - name: controlrate_profile
        description: "Control rate profile to switch to when the battery profile is selected, 0 to disable and keep the currently selected control rate profile"
        default_value: 0
        field: controlRateProfile
        min: 0
        max: MAX_CONTROL_RATE_PROFILE_COUNT

      - name: throttle_scale
        description: "Throttle scaling factor. `1` means no throttle scaling. `0.5` means throttle scaled down by 50%"
        default_value: 1.0
        field: motor.throttleScale
        min: 0
        max: 1
      - name: throttle_idle
        description: "The percentage of the throttle range (`max_throttle` - `min_command`) above `min_command` used for minimum / idle throttle."
        default_value: 8
        field: motor.throttleIdle
        min: 0
        max: 30
      - name: turtle_mode_power_factor
        field: motor.turtleModePowerFactor
        default_value: 55
        description: "Turtle mode power factor"
        condition: USE_DSHOT
        min: 0
        max: 100
      - name: failsafe_throttle
        description: "Throttle level used for landing when failsafe is enabled. See [Failsafe documentation](Failsafe.md#failsafe_throttle)."
        default_value: 1000
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX
      - name: nav_mc_hover_thr
        description: "Multicopter hover throttle hint for altitude controller. Should be set to approximate throttle value when drone is hovering."
        default_value: 1300
        field: nav.mc.hover_throttle
        min: 1000
        max: 2000
      - name: nav_fw_cruise_thr
        description: "Cruise throttle in GPS assisted modes, this includes RTH. Should be set high enough to avoid stalling. This values gives INAV a base for throttle when flying straight, and it will increase or decrease throttle based on pitch of airplane and the parameters below. In addition it will increase throttle if GPS speed gets below 7m/s ( hardcoded )"
        default_value: 1400
        field: nav.fw.cruise_throttle
        min: 1000
        max: 2000
      - name: nav_fw_min_thr
        description: "Minimum throttle for flying wing in GPS assisted modes"
        default_value: 1200
        field: nav.fw.min_throttle
        min: 1000
        max: 2000
      - name: nav_fw_max_thr
        description: "Maximum throttle for flying wing in GPS assisted modes"
        default_value: 1700
        field: nav.fw.max_throttle
        min: 1000
        max: 2000
      - name: nav_fw_pitch2thr
        description: "Amount of throttle applied related to pitch attitude in GPS assisted modes. Throttle = nav_fw_cruise_throttle - (nav_fw_pitch2thr * pitch_angle). (notice that pitch_angle is in degrees and is negative when climbing and positive when diving, and throttle value is constrained between nav_fw_min_thr and nav_fw_max_thr)"
        default_value: 10
        field: nav.fw.pitch_to_throttle
        min: 0
        max: 100
      - name: nav_fw_launch_thr
        description: "Launch throttle - throttle to be set during launch sequence (pwm units)"
        default_value: 1700
        field: nav.fw.launch_throttle
        min: 1000
        max: 2000
      - name: nav_fw_launch_idle_thr
        description: "Launch idle throttle - throttle to be set before launch sequence is initiated. If set below minimum throttle it will force motor stop or at idle throttle (depending if the MOTOR_STOP is enabled). If set above minimum throttle it will force throttle to this value (if MOTOR_STOP is enabled it will be handled according to throttle stick position)"
        default_value: 1000
        field: nav.fw.launch_idle_throttle
        min: 1000
        max: 2000
      - name: limit_cont_current
        description: "Continous current limit (dA), set to 0 to disable"
        condition: USE_POWER_LIMITS
        default_value: 0
        field: powerLimits.continuousCurrent
        max: 4000
      - name: limit_burst_current
        description: "Burst current limit (dA): the current which is allowed during `limit_burst_current_time` after which `limit_cont_current` will be enforced, set to 0 to disable"
        condition: USE_POWER_LIMITS
        default_value: 0
        field: powerLimits.burstCurrent
        max: 4000
      - name: limit_burst_current_time
        description: "Allowed current burst time (ds) during which `limit_burst_current` is allowed and after which `limit_cont_current` will be enforced"
        condition: USE_POWER_LIMITS
        default_value: 0
        field: powerLimits.burstCurrentTime
        max: 3000
      - name: limit_burst_current_falldown_time
        description: "Time slice at the end of the burst time during which the current limit will be ramped down from `limit_burst_current` back down to `limit_cont_current`"
        condition: USE_POWER_LIMITS
        default_value: 0
        field: powerLimits.burstCurrentFalldownTime
        max: 3000
      - name: limit_cont_power
        description: "Continous power limit (dW), set to 0 to disable"
        condition: USE_POWER_LIMITS && USE_ADC
        default_value: 0
        field: powerLimits.continuousPower
        max: 40000
      - name: limit_burst_power
        description: "Burst power limit (dW): the current which is allowed during `limit_burst_power_time` after which `limit_cont_power` will be enforced, set to 0 to disable"
        condition: USE_POWER_LIMITS && USE_ADC
        default_value: 0
        field: powerLimits.burstPower
        max: 40000
      - name: limit_burst_power_time
        description: "Allowed power burst time (ds) during which `limit_burst_power` is allowed and after which `limit_cont_power` will be enforced"
        condition: USE_POWER_LIMITS && USE_ADC
        default_value: 0
        field: powerLimits.burstPowerTime
        max: 3000
      - name: limit_burst_power_falldown_time
        description: "Time slice at the end of the burst time during which the power limit will be ramped down from `limit_burst_power` back down to `limit_cont_power`"
        condition: USE_POWER_LIMITS && USE_ADC
        default_value: 0
        field: powerLimits.burstPowerFalldownTime
        max: 3000

  - name: PG_MIXER_PROFILE
    type: mixerProfile_t
    headers: ["flight/mixer_profile.h"]
    value_type: MIXER_CONFIG_VALUE
    members:
      - name: motor_direction_inverted
        description: "Use if you need to inverse yaw motor direction."
        default_value: OFF
        field: mixer_config.motorDirectionInverted
        type: bool
      - name: platform_type
        description: "Defines UAV platform type. Allowed values: \"MULTIROTOR\", \"AIRPLANE\", \"HELICOPTER\", \"TRICOPTER\", \"ROVER\", \"BOAT\". Currently only MULTIROTOR, AIRPLANE and TRICOPTER types are implemented"
        default_value: "MULTIROTOR"
        field: mixer_config.platformType
        type: uint8_t
        table: platform_type
      - name: has_flaps
        description: "Defines is UAV is capable of having flaps. If ON and AIRPLANE `platform_type` is used, **FLAPERON** flight mode will be available for the pilot"
        default_value: OFF
        field: mixer_config.hasFlaps
        type: bool
      - name: model_preview_type
        description: "ID of mixer preset applied in a Configurator. **Do not modify manually**. Used only for backup/restore reasons."
        default_value: -1
        field: mixer_config.appliedMixerPreset
        min: -1
        max: INT16_MAX
      - name: motorstop_on_low
        description: "If enabled, motor will stop when throttle is low on this mixer_profile"
        default_value: ON
        field: mixer_config.motorstopOnLow
        type: bool
      - name: mixer_pid_profile_linking
        description: "If enabled, pid profile_index will follow mixer_profile index. Set to OFF(default) if you want to handle PID profile by your self. Recommend to set to ON on all mixer_profiles to let the mixer_profile handle the PID profile switching on a VTOL or mixed platform type setup."
        default_value: OFF
        field: mixer_config.PIDProfileLinking
        type: bool
      - name: mixer_automated_switch
        description: "If set to on, This mixer_profile will try to switch to another mixer_profile when 1.RTH heading home is requested and distance to home is lager than 3*nav_fw_loiter_radius on mixer_profile is a MULTIROTOR or TRICOPTER platform_type. 2. RTH landing is requested on this mixer_profile is a AIRPLANE platform_type"
        default_value: OFF
        field: mixer_config.automated_switch
        type: bool
      - name: mixer_switch_trans_timer
        description: "If switch another mixer_profile is scheduled by mixer_automated_switch or mixer_automated_switch. Activate Mixertransion motor/servo mixing for this many decisecond(0.1s) before the actual mixer_profile switch."
        default_value: 0
        field: mixer_config.switchTransitionTimer
        min: 0
        max: 200
      - name: tailsitter_orientation_offset
        description: "Apply a 90 deg pitch offset in sensor aliment for tailsitter flying mode"
        default_value: OFF
        field: mixer_config.tailsitterOrientationOffset
        type: bool

  - name: PG_REVERSIBLE_MOTORS_CONFIG
    type: reversibleMotorsConfig_t
    members:
      - name: 3d_deadband_low
        description: "Low value of throttle deadband for 3D mode (when stick is in the 3d_deadband_throttle range, the fixed values of 3d_deadband_low / _high are used instead)"
        default_value: 1406
        field: deadband_low
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX
      - name: 3d_deadband_high
        description: "High value of throttle deadband for 3D mode (when stick is in the deadband range, the value in 3d_neutral is used instead)"
        default_value: 1514
        field: deadband_high
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX
      - name: 3d_neutral
        description: "Neutral (stop) throttle value for 3D mode"
        default_value: 1460
        field: neutral
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX

  - name: PG_SERVO_CONFIG
    type: servoConfig_t
    headers: ["flight/servos.h"]
    members:
      - name: servo_protocol
        description: "An option to chose the protocol/option that would be used to output servo data. Possible options `PWM` (FC servo outputs), `SBUS` (S.Bus protocol output via a configured serial port)"
        default_value: "PWM"
        field: servo_protocol
        table: servo_protocol
      - name: servo_center_pulse
        description: "Servo midpoint"
        default_value: 1500
        field: servoCenterPulse
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX
      - name: servo_pwm_rate
        description: "Output frequency (in Hz) servo pins. When using tricopters or gimbal with digital servo, this rate can be increased. Max of 498Hz (for 500Hz pwm period), and min of 50Hz. Most digital servos will support for example 330Hz."
        default_value: 50
        field: servoPwmRate
        min: 50
        max: 498
      - name: servo_lpf_hz
        description: "Selects the servo PWM output cutoff frequency. Value is in [Hz]"
        default_value: 20
        field: servo_lowpass_freq
        min: 0
        max: 400
      - name: flaperon_throw_offset
        description: "Defines throw range in us for both ailerons that will be passed to servo mixer via input source 14 (`FEATURE FLAPS`) when FLAPERON mode is activated."
        default_value: 200
        min: FLAPERON_THROW_MIN
        max: FLAPERON_THROW_MAX
      - name: tri_unarmed_servo
        description: "On tricopter mix only, if this is set to ON, servo will always be correcting regardless of armed state. to disable this, set it to OFF."
        default_value: ON
        type: bool
      - name: servo_autotrim_rotation_limit
        description: "Servo midpoints are only updated when total aircraft rotation is less than this threshold [deg/s]. Only applies when using `feature FW_AUTOTRIM`."
        default_value: 15
        min: 1
        max: 60

  - name: PG_CONTROL_RATE_PROFILES
    type: controlRateConfig_t
    headers: ["fc/controlrate_profile_config_struct.h"]
    value_type: CONTROL_RATE_VALUE
    members:
      - name: thr_mid
        description: "Throttle value when the stick is set to mid-position. Used in the throttle curve calculation."
        default_value: 50
        field: throttle.rcMid8
        min: 0
        max: 100
      - name: thr_expo
        description: "Throttle exposition value"
        default_value: 0
        field: throttle.rcExpo8
        min: 0
        max: 100
      - name: tpa_rate
        description: "Throttle PID attenuation reduces influence of PDFF on ROLL and PITCH of multi-rotor, PIDFF on ROLL,PITCH,YAW OF fixed_wing as throttle increases. For every 1% throttle after the TPA breakpoint, P is reduced by the TPA rate."
        default_value: 0
        field: throttle.dynPID
        min: 0
        max: 100
      - name: tpa_breakpoint
        description: "See tpa_rate."
        default_value: 1500
        field: throttle.pa_breakpoint
        min: PWM_RANGE_MIN
        max: PWM_RANGE_MAX
      - name: tpa_on_yaw
        description: "Throttle PID attenuation also reduces influence on YAW for multi-rotor, Should be set to ON for tilting rotors."
        type: bool
        field: throttle.dynPID_on_YAW
        default_value: OFF
      - name: fw_tpa_time_constant
        description: "TPA smoothing and delay time constant to reflect non-instant speed/throttle response of the plane. See **PID Attenuation and scaling** Wiki for full details."
        default_value: 1500
        field: throttle.fixedWingTauMs
        min: 0
        max: 5000
      - name: rc_expo
        description: "Exposition value used for the PITCH/ROLL axes by all the stabilized flights modes (all but `MANUAL`)"
        default_value: 70
        field: stabilized.rcExpo8
        min: 0
        max: 100
      - name: rc_yaw_expo
        description: "Exposition value used for the YAW axis by all the stabilized flights modes (all but `MANUAL`)"
        default_value: 20
        field: stabilized.rcYawExpo8
        min: 0
        max: 100
      # New rates are in dps/10. That means, Rate of 20 means 200dps of rotation speed on given axis.
      # Rate 180 (1800dps) is max. value gyro can measure reliably
      - name: roll_rate
        description: "Defines rotation rate on ROLL axis that UAV will try to archive on max. stick deflection. Rates are defined in tens of degrees (deca-degrees) per second [rate = dps/10]. That means, rate 20 represents 200dps rotation speed. Default 20 (200dps) is more less equivalent of old Cleanflight/Baseflight rate 0. Max. 180 (1800dps) is what gyro can measure."
        default_value: 20
        field: stabilized.rates[FD_ROLL]
        min: ROLL_PITCH_RATE_MIN
        max: ROLL_PITCH_RATE_MAX
      - name: pitch_rate
        description: "Defines rotation rate on PITCH axis that UAV will try to archive on max. stick deflection. Rates are defined in tens of degrees (deca-degrees) per second [rate = dps/10]. That means, rate 20 represents 200dps rotation speed. Default 20 (200dps) is more less equivalent of old Cleanflight/Baseflight rate 0. Max. 180 (1800dps) is what gyro can measure."
        default_value: 20
        field: stabilized.rates[FD_PITCH]
        min: ROLL_PITCH_RATE_MIN
        max: ROLL_PITCH_RATE_MAX
      - name: yaw_rate
        description: "Defines rotation rate on YAW axis that UAV will try to archive on max. stick deflection. Rates are defined in tens of degrees (deca-degrees) per second [rate = dps/10]. That means, rate 20 represents 200dps rotation speed. Default 20 (200dps) is more less equivalent of old Cleanflight/Baseflight rate 0. Max. 180 (1800dps) is what gyro can measure."
        default_value: 20
        field: stabilized.rates[FD_YAW]
        min: 1
        max: 180
      - name: manual_rc_expo
        description: "Exposition value used for the PITCH/ROLL axes by the `MANUAL` flight mode [0-100]"
        default_value: 35
        field: manual.rcExpo8
        min: 0
        max: 100
      - name: manual_rc_yaw_expo
        description: "Exposition value used for the YAW axis by the `MANUAL` flight mode [0-100]"
        default_value: 20
        field: manual.rcYawExpo8
        min: 0
        max: 100
      - name: manual_roll_rate
        description: "Servo travel multiplier for the ROLL axis in `MANUAL` flight mode [0-100]%"
        default_value: 100
        field: manual.rates[FD_ROLL]
        min: MANUAL_RATE_MIN
        max: MANUAL_RATE_MAX
      - name: manual_pitch_rate
        description: "Servo travel multiplier for the PITCH axis in `MANUAL` flight mode [0-100]%"
        default_value: 100
        field: manual.rates[FD_PITCH]
        min: MANUAL_RATE_MIN
        max: MANUAL_RATE_MAX
      - name: manual_yaw_rate
        description: "Servo travel multiplier for the YAW axis in `MANUAL` flight mode [0-100]%"
        default_value: 100
        field: manual.rates[FD_YAW]
        min: MANUAL_RATE_MIN
        max: MANUAL_RATE_MAX
      - name: fpv_mix_degrees
        description: "The tilt angle of the FPV camera in degrees, used by the FPV ANGLE MIX mode"
        field: misc.fpvCamAngleDegrees
        min: 0
        max: 50
        default_value: 0
      - name: rate_dynamics_center_sensitivity
        field: rateDynamics.sensitivityCenter
        default_value: 100
        min: 25
        max: 175
        description: "The center stick sensitivity for Rate Dynamics"
        condition: USE_RATE_DYNAMICS
      - name: rate_dynamics_end_sensitivity
        field: rateDynamics.sensitivityEnd
        default_value: 100
        min: 25
        max: 175
        description: "The end stick sensitivity for Rate Dynamics"
        condition: USE_RATE_DYNAMICS
      - name: rate_dynamics_center_correction
        field: rateDynamics.correctionCenter
        default_value: 10
        min: 10
        max: 95
        description: "The center stick correction for Rate Dynamics"
        condition: USE_RATE_DYNAMICS
      - name: rate_dynamics_end_correction
        field: rateDynamics.correctionEnd
        default_value: 10
        min: 10
        max: 95
        description: "The end  stick correction for Rate Dynamics"
        condition: USE_RATE_DYNAMICS
      - name: rate_dynamics_center_weight
        field: rateDynamics.weightCenter
        default_value: 0
        min: 0
        max: 95
        description: "The center stick weight for Rate Dynamics"
        condition: USE_RATE_DYNAMICS
      - name: rate_dynamics_end_weight
        field: rateDynamics.weightEnd
        default_value: 0
        min: 0
        max: 95
        description: "The end  stick weight for Rate Dynamics"
        condition: USE_RATE_DYNAMICS

  - name: PG_SERIAL_CONFIG
    type: serialConfig_t
    headers: ["io/serial.h"]
    members:
      - name: reboot_character
        description: "Special character used to trigger reboot"
        default_value: 82
        min: 48
        max: 126

  - name: PG_IMU_CONFIG
    type: imuConfig_t
    headers: ["flight/imu.h"]
    members:
      - name: ahrs_dcm_kp
        description: "Inertial Measurement Unit KP Gain for accelerometer measurements"
        default_value: 2000
        field: dcm_kp_acc
        max: UINT16_MAX
      - name: ahrs_dcm_ki
        description: "Inertial Measurement Unit KI Gain for accelerometer measurements"
        default_value: 50
        field: dcm_ki_acc
        max: UINT16_MAX
      - name: ahrs_dcm_kp_mag
        description: "Inertial Measurement Unit KP Gain for compass measurements"
        default_value: 2000
        field: dcm_kp_mag
        max: UINT16_MAX
      - name: ahrs_dcm_ki_mag
        description: "Inertial Measurement Unit KI Gain for compass measurements"
        default_value: 50
        field: dcm_ki_mag
        max: UINT16_MAX
      - name: small_angle
        description: "If the aircraft tilt angle exceed this value the copter will refuse to arm."
        default_value: 25
        min: 0
        max: 180
      - name: ahrs_acc_ignore_rate
        description: "Total gyro rotation rate threshold [deg/s] before scaling to consider accelerometer trustworthy"
        default_value: 15
        field: acc_ignore_rate
        min: 0
        max: 30
      - name: ahrs_acc_ignore_slope
        description: "Half-width of the interval to gradually reduce accelerometer weight. Centered at `imu_acc_ignore_rate` (exactly 50% weight)"
        default_value: 5
        field: acc_ignore_slope
        min: 0
        max: 10
      - name: ahrs_gps_yaw_windcomp
        description: "Wind compensation in heading estimation from gps groundcourse(fixed wing only)"
        default_value: ON
        field: gps_yaw_windcomp
        type: bool
      - name: ahrs_inertia_comp_method
        description: "Inertia force compensation method when gps is avaliable, VELNED use the accleration from gps, TURNRATE calculates accleration by turnrate multiplied by speed, ADAPTIVE choose best result from two in each ahrs loop"
        default_value: ADAPTIVE
        field: inertia_comp_method
        table: imu_inertia_comp_method
      - name: ahrs_gps_yaw_weight
        description: "Arhs gps yaw weight when mag is avaliable, 0 means no gps yaw, 100 means equal weight as compass"
        default_value: 100
        field: gps_yaw_weight
        min: 0
        max: 500

  - name: PG_ARMING_CONFIG
    type: armingConfig_t
    members:
      - name: fixed_wing_auto_arm
        description: "Auto-arm fixed wing aircraft on throttle above min_check, and disarming with stick commands are disabled, so power cycle is required to disarm. Requires enabled motorstop and no arm switch configured."
        default_value: OFF
        type: bool
      - name: disarm_always
        description: "When you switch to Disarm, do so regardless of throttle position. If this Setting is `OFF`. It will only disarm only when the throttle is low. This is similar to the previous `disarm_kill_switch` option. Default setting is the same as the old default behaviour."
        default_value: ON
        type: bool
      - name: switch_disarm_delay
        description: "Delay before disarming when requested by switch (ms) [0-1000]"
        default_value: 250
        field: switchDisarmDelayMs
        min: 0
        max: 1000
      - name: prearm_timeout
        description: "Duration (ms) for which Prearm being activated is valid. after this, Prearm needs to be reset. 0 means Prearm does not timeout."
        default_value: 10000
        field: prearmTimeoutMs
        min: 0
        max: 10000

  - name: PG_GENERAL_SETTINGS
    headers: ["config/general_settings.h"]
    type: generalSettings_t
    members:
      - name: applied_defaults
        description: "Internal (configurator) hint. Should not be changed manually"
        default_value: 0
        field: appliedDefaults
        type: uint8_t
        min: 0
        max: 99

  - name: PG_EZ_TUNE
    headers: ["flight/ez_tune.h"]
    type: ezTuneSettings_t
    value_type: EZ_TUNE_VALUE
    members:
      - name: ez_enabled
        description: "Enables EzTune feature"
        default_value: OFF
        field: enabled
        type: bool
      - name: ez_filter_hz
        description: "EzTune filter cutoff frequency"
        default_value: 110
        field: filterHz
        min: 20
        max: 300
      - name: ez_axis_ratio
        description: "EzTune axis ratio"
        default_value: 110
        field: axisRatio
        min: 25
        max: 175
      - name: ez_response
        description: "EzTune response"
        default_value: 100
        field: response
        min: 0
        max: 200
      - name: ez_damping
        description: "EzTune damping"
        default_value: 100
        field: damping
        min: 0
        max: 200
      - name: ez_stability
        description: "EzTune stability"
        default_value: 100
        field: stability
        min: 0
        max: 200
      - name: ez_aggressiveness
        description: "EzTune aggressiveness"
        default_value: 100
        field: aggressiveness
        min: 0
        max: 200
      - name: ez_rate
        description: "EzTune rate"
        default_value: 100
        field: rate
        min: 0
        max: 200
      - name: ez_expo
        description: "EzTune expo"
        default_value: 100
        field: expo
        min: 0
        max: 200
      - name: ez_snappiness
        description: "EzTune snappiness"
        default_value: 0
        field: snappiness
        min: 0
        max: 100

  - name: PG_RPM_FILTER_CONFIG
    headers: ["flight/rpm_filter.h"]
    condition: USE_RPM_FILTER
    type: rpmFilterConfig_t
    members:
      - name: rpm_gyro_filter_enabled
        description: "Enables gyro RPM filtere. Set to `ON` only when ESC telemetry is working and rotation speed of the motors is correctly reported to INAV"
        default_value: OFF
        field: gyro_filter_enabled
        type: bool
      - name: rpm_gyro_harmonics
        description: "Number of harmonic frequences to be covered by gyro RPM filter. Default value of `1` usually works just fine"
        default_value: 1
        field: gyro_harmonics
        type: uint8_t
        min: 1
        max: 3
      - name: rpm_gyro_min_hz
        description: "The lowest frequency for gyro RPM filtere. Default `150` is fine for 5\" mini-quads. On 7-inch drones you can lower even down to `60`-`70`"
        default_value: 100
        field: gyro_min_hz
        type: uint8_t
        min: 30
        max: 200
      - name: rpm_gyro_q
        description: "Q factor for gyro RPM filter. Lower values give softer, wider attenuation. Usually there is no need to change this setting"
        default_value: 500
        field: gyro_q
        type: uint16_t
        min: 1
        max: 3000
  - name: PG_GPS_CONFIG
    headers: [ "io/gps.h" ]
    type: gpsConfig_t
    condition: USE_GPS
    members:
      - name: gps_provider
        description: "Which GPS protocol to be used."
        default_value: "UBLOX"
        field: provider
        table: gps_provider
        type: uint8_t
      - name: gps_sbas_mode
        description: "Which SBAS mode to be used"
        default_value: "NONE"
        field: sbasMode
        table: gps_sbas_mode
        type: uint8_t
      - name: gps_dyn_model
        description: "GPS navigation model: Pedestrian, Automotive, Air<1g, Air<2g, Air<4g. Default is AIR_2G. Use pedestrian/Automotive with caution, can cause flyaways with fast flying."
        default_value: "AIR_2G"
        field: dynModel
        table: gps_dyn_model
        type: uint8_t
      - name: gps_auto_config
        description: "Enable automatic configuration of UBlox GPS receivers."
        default_value: ON
        field: autoConfig
        type: bool
      - name: gps_auto_baud
        description: "Automatic configuration of GPS baudrate(The specified baudrate in configured in ports will be used) when used with UBLOX GPS"
        default_value: ON
        field: autoBaud
        type: bool
      - name: gps_auto_baud_max_supported
        description: "Max baudrate supported by GPS unit. This is used during autobaud. M8 supports up to 460400, M10 supports up to 921600 and 230400 is the value used before INAV 7.0"
        default_value: "230400"
        table: gps_auto_baud_max
        field: autoBaudMax
        type: uint8_t
      - name: gps_ublox_use_galileo
        description: "Enable use of Galileo satellites. This is at the expense of other regional constellations, so benefit may also be regional. Requires M8N and Ublox firmware 3.x (or later) [OFF/ON]."
        default_value: OFF
        field: ubloxUseGalileo
        type: bool
      - name: gps_ublox_use_beidou
        description: "Enable use of Beidou satellites. This is at the expense of other regional constellations, so benefit may also be regional. Requires gps hardware support [OFF/ON]."
        default_value: OFF
        field: ubloxUseBeidou
        type: bool
      - name: gps_ublox_use_glonass
        description: "Enable use of Glonass satellites. This is at the expense of other regional constellations, so benefit may also be regional. Requires gps haardware support [OFF/ON]."
        default_value: OFF
        field: ubloxUseGlonass
        type: bool
      - name: gps_min_sats
        description: "Minimum number of GPS satellites in view to acquire GPS_FIX and consider GPS position valid. Some GPS receivers appeared to be very inaccurate with low satellite count."
        default_value: 6
        field: gpsMinSats
        min: 5
        max: 10
      - name: gps_ublox_nav_hz
        description: "Navigation update rate for UBLOX receivers. Some receivers may limit the maximum number of satellites tracked when set to a higher rate or even stop sending navigation updates if the value is too high. Some M10 devices can do up to 25Hz. 10 is a safe value for M8 and newer."
        default_value: 10
        field: ubloxNavHz
        type: uint8_t
        min: 5
        max: 200


  - name: PG_RC_CONTROLS_CONFIG
    type: rcControlsConfig_t
    headers: ["fc/rc_controls.h"]
    members:
      - name: deadband
        description: "These are values (in us) by how much RC input can be different before it's considered valid. For transmitters with jitter on outputs, this value can be increased. Defaults are zero, but can be increased up to 10 or so if rc inputs twitch while idle."
        default_value: 2
        min: 0
        max: 32
      - name: yaw_deadband
        description: "These are values (in us) by how much RC input can be different before it's considered valid. For transmitters with jitter on outputs, this value can be increased. Defaults are zero, but can be increased up to 10 or so if rc inputs twitch while idle."
        default_value: 2
        min: 0
        max: 100
      - name: pos_hold_deadband
        description: "Stick deadband in [r/c points], applied after r/c deadband and expo. Used for adjustments in navigation modes."
        default_value: 10
        min: 2
        max: 250
      - name: alt_hold_deadband
        description: "Defines the deadband of throttle during alt_hold [r/c points]"
        default_value: 50
        min: 10
        max: 250
      - name: 3d_deadband_throttle
        description: "Throttle signal will be held to a fixed value when throttle is centered with an error margin defined in this parameter."
        default_value: 50
        field: mid_throttle_deadband
        min: 0
        max: 200
      - name: airmode_type
        description: "Defines the Airmode state handling type. Default **STICK_CENTER** is the classical approach in which Airmode is always active if enabled, but when the throttle is low and ROLL/PITCH/YAW sticks are centered, Iterms is not allowed to grow (ANTI_WINDUP). **THROTTLE_THRESHOLD** is the Airmode behavior known from Betaflight. In this mode, Airmode is active as soon THROTTLE position is above `airmode_throttle_threshold` and stays active until disarm. ANTI_WINDUP is never triggered. For small Multirotors (up to 7-inch propellers) it is suggested to switch to **THROTTLE_THRESHOLD** since it keeps full stabilization no matter what pilot does with the sticks. Fixed Wings always use **STICK_CENTER_ONCE** or **STICK_CENTER** modes."
        default_value: "STICK_CENTER"
        field: airmodeHandlingType
        table: airmodeHandlingType
      - name: airmode_throttle_threshold
        description: "Defines airmode THROTTLE activation threshold when `airmode_type` **THROTTLE_THRESHOLD** is used"
        default_value: 1150
        field: airmodeThrottleThreshold
        min: 1000
        max: 2000

  - name: PG_PID_PROFILE
    type: pidProfile_t
    headers: ["flight/pid.h"]
    value_type: PROFILE_VALUE
    members:
      - name: mc_p_pitch
        description: "Multicopter rate stabilisation P-gain for PITCH"
        default_value: 40
        field: bank_mc.pid[PID_PITCH].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_i_pitch
        description: "Multicopter rate stabilisation I-gain for PITCH"
        default_value: 30
        field: bank_mc.pid[PID_PITCH].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_d_pitch
        description: "Multicopter rate stabilisation D-gain for PITCH"
        default_value: 23
        field: bank_mc.pid[PID_PITCH].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_cd_pitch
        description: "Multicopter Control Derivative gain for PITCH (known as 'Feed Forward' in Betaflight). The CD intoduces a term to the PID controller that is the magnitude of the Setpoint change. Fast inputs produce a high CD gain to help push the MC into a move; in advance of the P-gain if set high enough."
        default_value: 60
        field: bank_mc.pid[PID_PITCH].FF
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_p_roll
        description: "Multicopter rate stabilisation P-gain for ROLL"
        default_value: 40
        field: bank_mc.pid[PID_ROLL].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_i_roll
        description: "Multicopter rate stabilisation I-gain for ROLL"
        default_value: 30
        field: bank_mc.pid[PID_ROLL].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_d_roll
        description: "Multicopter rate stabilisation D-gain for ROLL"
        default_value: 23
        field: bank_mc.pid[PID_ROLL].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_cd_roll
        description: "Multicopter Control Derivative gain for ROLL (known as 'Feed Forward' in Betaflight). The CD intoduces a term to the PID controller that is the magnitude of the Setpoint change. Fast inputs produce a high CD gain to help push the MC into a move; in advance of the P-gain if set high enough."
        default_value: 60
        field: bank_mc.pid[PID_ROLL].FF
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_p_yaw
        description: "Multicopter rate stabilisation P-gain for YAW"
        default_value: 85
        field: bank_mc.pid[PID_YAW].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_i_yaw
        description: "Multicopter rate stabilisation I-gain for YAW"
        default_value: 45
        field: bank_mc.pid[PID_YAW].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_d_yaw
        description: "Multicopter rate stabilisation D-gain for YAW"
        default_value: 0
        field: bank_mc.pid[PID_YAW].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_cd_yaw
        description: "Multicopter Control Derivative gain for YAW (known as 'Feed Forward' in Betaflight). The CD intoduces a term to the PID controller that is the magnitude of the Setpoint change. Fast inputs produce a high CD gain to help push the MC into a move; in advance of the P-gain if set high enough."
        default_value: 60
        field: bank_mc.pid[PID_YAW].FF
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_p_level
        description: "Multicopter attitude stabilisation P-gain"
        default_value: 20
        field: bank_mc.pid[PID_LEVEL].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_i_level
        description: "Multicopter attitude stabilisation low-pass filter cutoff"
        default_value: 15
        field: bank_mc.pid[PID_LEVEL].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: mc_d_level
        description: "Multicopter attitude stabilisation HORIZON transition point"
        default_value: 75
        field: bank_mc.pid[PID_LEVEL].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_p_pitch
        description: "Fixed-wing rate stabilisation P-gain for PITCH"
        default_value: 5
        field: bank_fw.pid[PID_PITCH].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_i_pitch
        description: "Fixed-wing rate stabilisation I-gain for PITCH"
        default_value: 7
        field: bank_fw.pid[PID_PITCH].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_d_pitch
        description: "Fixed wing rate stabilisation D-gain for PITCH"
        default_value: 0
        field: bank_fw.pid[PID_PITCH].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_ff_pitch
        description: "Fixed-wing rate stabilisation FF-gain for PITCH"
        default_value: 50
        field: bank_fw.pid[PID_PITCH].FF
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_p_roll
        description: "Fixed-wing rate stabilisation P-gain for ROLL"
        default_value: 5
        field: bank_fw.pid[PID_ROLL].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_i_roll
        description: "Fixed-wing rate stabilisation I-gain for ROLL"
        default_value: 7
        field: bank_fw.pid[PID_ROLL].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_d_roll
        description: "Fixed wing rate stabilisation D-gain for ROLL"
        default_value: 0
        field: bank_fw.pid[PID_ROLL].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_ff_roll
        description: "Fixed-wing rate stabilisation FF-gain for ROLL"
        default_value: 50
        field: bank_fw.pid[PID_ROLL].FF
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_p_yaw
        description: "Fixed-wing rate stabilisation P-gain for YAW"
        default_value: 6
        field: bank_fw.pid[PID_YAW].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_i_yaw
        description: "Fixed-wing rate stabilisation I-gain for YAW"
        default_value: 10
        field: bank_fw.pid[PID_YAW].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_d_yaw
        description: "Fixed wing rate stabilisation D-gain for YAW"
        default_value: 0
        field: bank_fw.pid[PID_YAW].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_ff_yaw
        description: "Fixed-wing rate stabilisation FF-gain for YAW"
        default_value: 60
        field: bank_fw.pid[PID_YAW].FF
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_p_level
        description: "Fixed-wing attitude stabilisation P-gain"
        default_value: 20
        field: bank_fw.pid[PID_LEVEL].P
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_i_level
        description: "Fixed-wing attitude stabilisation low-pass filter cutoff"
        default_value: 5
        field: bank_fw.pid[PID_LEVEL].I
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: fw_d_level
        description: "Fixed-wing attitude stabilisation HORIZON transition point"
        default_value: 75
        field: bank_fw.pid[PID_LEVEL].D
        min: RPYL_PID_MIN
        max: RPYL_PID_MAX
      - name: max_angle_inclination_rll
        description: "Maximum inclination in level (angle) mode (ROLL axis). 100=10°"
        default_value: 450
        field: max_angle_inclination[FD_ROLL]
        min: 100
        max: 900
      - name: max_angle_inclination_pit
        description: "Maximum inclination in level (angle) mode (PITCH axis). 100=10°"
        default_value: 450
        field: max_angle_inclination[FD_PITCH]
        min: 100
        max: 900
      - name: dterm_lpf_hz
        description: "Dterm low pass filter cutoff frequency. Default setting is very conservative and small multirotors should use higher value between 80 and 100Hz. 80 seems like a gold spot for 7-inch builds while 100 should work best with 5-inch machines. If motors are getting too hot, lower the value"
        default_value: 110
        min: 0
        max: 500
      - name: dterm_lpf_type
        description: "Defines the type of stage 1 D-term LPF filter. Possible values: `PT1`, `BIQUAD`, `PT2`, `PT3`."
        default_value: "PT2"
        field: dterm_lpf_type
        table: filter_type_full
      - name: yaw_lpf_hz
        description: "Yaw P term low pass filter cutoff frequency. Should be disabled (set to `0`) on small multirotors (7 inches and below)"
        default_value: 0
        min: 0
        max: 200
      - name: fw_reference_airspeed
        description: "Reference airspeed. Set this to airspeed at which PIDs were tuned. Usually should be set to cruise airspeed. Also used for coordinated turn calculation if airspeed sensor is not present."
        default_value: 1500
        field: fixedWingReferenceAirspeed
        min: 300
        max: 6000
      - name: fw_turn_assist_yaw_gain
        description: "Gain required to keep the yaw rate consistent with the turn rate for a coordinated turn (in TURN_ASSIST mode). Value significantly different from 1.0 indicates a problem with the airspeed calibration (if present) or value of `fw_reference_airspeed` parameter"
        default_value: 1
        field: fixedWingCoordinatedYawGain
        min: 0
        max: 2
      - name: fw_turn_assist_pitch_gain
        description: "Gain required to keep constant pitch angle during coordinated turns (in TURN_ASSIST mode). Value significantly different from 1.0 indicates a problem with the airspeed calibration (if present) or value of `fw_reference_airspeed` parameter"
        default_value: 1
        field: fixedWingCoordinatedPitchGain
        min: 0
        max: 2
      - name: fw_yaw_iterm_freeze_bank_angle
        description: "Yaw Iterm is frozen when bank angle is above this threshold [degrees]. This solves the problem of the rudder counteracting turns by partially disabling yaw stabilization when making banked turns. Setting to 0 (the default) disables this feature. Only applies when autopilot is not active and TURN ASSIST is disabled."
        default_value: 0
        field: fixedWingYawItermBankFreeze
        min: 0
        max: 90
      - name: iterm_windup
        description: "Used to prevent Iterm accumulation on during maneuvers. Iterm will be dampened when motors are reaching it's limit (when requested motor correction range is above percentage specified by this parameter)"
        default_value: 50
        field: itermWindupPointPercent
        min: 0
        max: 90
      - name: pid_iterm_limit_percent
        description: "Limits max/min I-term value in stabilization PID controller. It solves the problem of servo saturation before take-off/throwing the airplane into the air. Or multirotors with low authority. By default, error accumulated in I-term can not exceed 33% of total pid throw (around 165us on deafult pidsum_limit of pitch/roll). Set 0 to disable completely."
        default_value: 33
        field: pidItermLimitPercent
        min: 0
        max: 200
      - name: rate_accel_limit_roll_pitch
        description: "Limits acceleration of ROLL/PITCH rotation speed that can be requested by stick input. In degrees-per-second-squared. Small and powerful UAV flies great with high acceleration limit ( > 5000 dps^2 and even > 10000 dps^2). Big and heavy multirotors will benefit from low acceleration limit (~ 360 dps^2). When set correctly, it greatly improves stopping performance. Value of 0 disables limiting."
        default_value: 0
        field: axisAccelerationLimitRollPitch
        max: 500000
      - name: rate_accel_limit_yaw
        description: "Limits acceleration of YAW rotation speed that can be requested by stick input. In degrees-per-second-squared. Small and powerful UAV flies great with high acceleration limit ( > 10000 dps^2). Big and heavy multirotors will benefit from low acceleration limit (~ 180 dps^2). When set correctly, it greatly improves stopping performance and general stability during yaw turns. Value of 0 disables limiting."
        default_value: 10000
        field: axisAccelerationLimitYaw
        max: 500000
      - name: heading_hold_rate_limit
        description: "This setting limits yaw rotation rate that HEADING_HOLD controller can request from PID inner loop controller. It is independent from manual yaw rate and used only when HEADING_HOLD flight mode is enabled by pilot, RTH or WAYPOINT modes."
        min: HEADING_HOLD_RATE_LIMIT_MIN
        max: HEADING_HOLD_RATE_LIMIT_MAX
        default_value: 90
      - name: nav_mc_pos_z_p
        description: "P gain of altitude PID controller (Multirotor)"
        field: bank_mc.pid[PID_POS_Z].P
        min: 0
        max: 255
        default_value: 50
      - name: nav_mc_vel_z_p
        description: "P gain of velocity PID controller"
        field: bank_mc.pid[PID_VEL_Z].P
        min: 0
        max: 255
        default_value: 100
      - name: nav_mc_vel_z_i
        description: "I gain of velocity PID controller"
        field: bank_mc.pid[PID_VEL_Z].I
        min: 0
        max: 255
        default_value: 50
      - name: nav_mc_vel_z_d
        description: "D gain of velocity PID controller"
        field: bank_mc.pid[PID_VEL_Z].D
        min: 0
        max: 255
        default_value: 10
      - name: nav_mc_pos_xy_p
        description: "Controls how fast the drone will fly towards the target position. This is a multiplier to convert displacement to target velocity"
        field: bank_mc.pid[PID_POS_XY].P
        min: 0
        max: 255
        default_value: 65
      - name: nav_mc_vel_xy_p
        description: "P gain of Position-Rate (Velocity to Acceleration) PID controller. Higher P means stronger response when position error occurs. Too much P might cause \"nervous\" behavior and oscillations"
        field: bank_mc.pid[PID_VEL_XY].P
        min: 0
        max: 255
        default_value: 40
      - name: nav_mc_vel_xy_i
        description: "I gain of Position-Rate (Velocity to Acceleration) PID controller. Used for drift compensation (caused by wind for example). Higher I means stronger response to drift. Too much I gain might cause target overshot"
        field: bank_mc.pid[PID_VEL_XY].I
        min: 0
        max: 255
        default_value: 15
      - name: nav_mc_vel_xy_d
        description: "D gain of Position-Rate (Velocity to Acceleration) PID controller. It can damp P and I. Increasing D might help when drone overshoots target."
        field: bank_mc.pid[PID_VEL_XY].D
        min: 0
        max: 255
        default_value: 100
      - name: nav_mc_vel_xy_ff
        description: "FF gain of Position-Rate (Velocity to Acceleration)"
        field: bank_mc.pid[PID_VEL_XY].FF
        min: 0
        max: 255
        default_value: 40
      - name: nav_mc_heading_p
        description: "P gain of Heading Hold controller (Multirotor)"
        default_value: 60
        field: bank_mc.pid[PID_HEADING].P
        min: 0
        max: 255
      - name: nav_mc_vel_xy_dterm_lpf_hz
        description: "D-term low pass filter cutoff frequency for horizontal velocity PID controller (Multirotor). It allows to smooth the PosHold CRUISE, WP and RTH when Multirotor is traveling at full speed. Dterm is not attenuated at low speeds, breaking and accelerating."
        field: navVelXyDTermLpfHz
        min: 0
        max: 100
        default_value: 2
      - name: nav_mc_vel_xy_dterm_attenuation
        description: "Maximum D-term attenution percentage for horizontal velocity PID controller (Multirotor). It allows to smooth the PosHold CRUISE, WP and RTH when Multirotor is traveling at full speed. Dterm is not attenuated at low speeds, breaking and accelerating."
        field: navVelXyDtermAttenuation
        min: 0
        max: 100
        default_value: 90
      - name: nav_mc_vel_xy_dterm_attenuation_start
        description: "A point (in percent of both target and current horizontal velocity) where nav_mc_vel_xy_dterm_attenuation begins"
        default_value: 10
        field: navVelXyDtermAttenuationStart
        min: 0
        max: 100
      - name: nav_mc_vel_xy_dterm_attenuation_end
        description: "A point (in percent of both target and current horizontal velocity) where nav_mc_vel_xy_dterm_attenuation reaches maximum"
        default_value: 60
        field: navVelXyDtermAttenuationEnd
        min: 0
        max: 100
      - name: nav_fw_pos_z_p
        description: "P gain of altitude PID controller (Fixedwing)"
        default_value: 30
        field: bank_fw.pid[PID_POS_Z].P
        min: 0
        max: 255
      - name: nav_fw_pos_z_i
        description: "I gain of altitude PID controller (Fixedwing)"
        default_value: 5
        field: bank_fw.pid[PID_POS_Z].I
        min: 0
        max: 255
      - name: nav_fw_pos_z_d
        description: "D gain of altitude PID controller (Fixedwing)"
        default_value: 10
        field: bank_fw.pid[PID_POS_Z].D
        min: 0
        max: 255
      - name: nav_fw_pos_z_ff
        description: "FF gain of altitude PID controller (Fixedwing)"
        default_value: 10
        field: bank_fw.pid[PID_POS_Z].FF
        min: 0
        max: 255
      - name: nav_fw_alt_control_response
        description: "Adjusts the deceleration response of fixed wing altitude control as the target altitude is approached. Decrease value to help avoid overshooting the target altitude."
        default_value: 40
        field: fwAltControlResponseFactor
        min: 5
        max: 100
      - name: nav_fw_pos_xy_p
        description: "P gain of 2D trajectory PID controller. Play with this to get a straight line between waypoints or a straight RTH"
        default_value: 75
        field: bank_fw.pid[PID_POS_XY].P
        min: 0
        max: 255
      - name: nav_fw_pos_xy_i
        description: "I gain of 2D trajectory PID controller. Too high and there will be overshoot in trajectory. Better start tuning with zero"
        default_value: 5
        field: bank_fw.pid[PID_POS_XY].I
        min: 0
        max: 255
      - name: nav_fw_pos_xy_d
        description: "D gain of 2D trajectory PID controller. Too high and there will be overshoot in trajectory. Better start tuning with zero"
        default_value: 8
        field: bank_fw.pid[PID_POS_XY].D
        min: 0
        max: 255
      - name: nav_fw_heading_p
        description: "P gain of Heading Hold controller (Fixedwing)"
        default_value: 60
        field: bank_fw.pid[PID_HEADING].P
        min: 0
        max: 255
      - name: nav_fw_pos_hdg_p
        description: "P gain of heading PID controller. (Fixedwing, rovers, boats)"
        default_value: 30
        field: bank_fw.pid[PID_POS_HEADING].P
        min: 0
        max: 255
      - name: nav_fw_pos_hdg_i
        description: "I gain of heading trajectory PID controller. (Fixedwing, rovers, boats)"
        default_value: 2
        field: bank_fw.pid[PID_POS_HEADING].I
        min: 0
        max: 255
      - name: nav_fw_pos_hdg_d
        description: "D gain of heading trajectory PID controller. (Fixedwing, rovers, boats)"
        default_value: 0
        field: bank_fw.pid[PID_POS_HEADING].D
        min: 0
        max: 255
      - name: nav_fw_pos_hdg_pidsum_limit
        description: "Output limit for heading trajectory PID controller. (Fixedwing, rovers, boats)"
        default_value: 350
        field: navFwPosHdgPidsumLimit
        min: PID_SUM_LIMIT_MIN
        max: PID_SUM_LIMIT_MAX
      - name: mc_iterm_relax
        description: "Iterm relax type. When enabled, Iterm will be relaxed when stick is centered. This will help to reduce bounceback and followthrough on multirotors. It is recommended to enable this feature on all multirotors."
        field: iterm_relax
        table: iterm_relax
        default_value: RP
      - name: mc_iterm_relax_cutoff
        description: "Iterm relax cutoff frequency."
        field: iterm_relax_cutoff
        min: 1
        max: 100
        default_value: 15
      - name: d_boost_min
        description: "D-term multiplier when pilot provides rapid stick input. Lower values give sharper response to stick input, higher values give smoother response."
        field: dBoostMin
        condition: USE_D_BOOST
        min: 0
        max: 1
        default_value: 0.5
      - name: d_boost_max
        description: "D-term multiplier when rapid external conditions are detected. Lower values give sharper response to stick input, higher values give smoother response by scaling D-gains up."
        field: dBoostMax
        condition: USE_D_BOOST
        min: 1
        max: 3
        default_value: 1.25
      - name: d_boost_max_at_acceleration
        description: "Acceleration threshold for D-term multiplier. When acceleration is above this value, D-term multiplier is set to `d_boost_max`"
        field: dBoostMaxAtAlleceleration
        condition: USE_D_BOOST
        min: 1000
        max: 16000
        default_value: 7500
      - name: d_boost_gyro_delta_lpf_hz
        description: "Cutoff frequency for the low pass filter applied to the gyro delta signal used for D-term boost. Lower value will produce a smoother D-term boost signal, but it will be more delayed."
        field: dBoostGyroDeltaLpfHz
        condition: USE_D_BOOST
        min: 10
        max: 250
        default_value: 80
      - name: antigravity_gain
        description: "Max Antigravity gain. `1` means Antigravity is disabled, `2` means Iterm is allowed to double during rapid throttle movements"
        default_value: 1
        field: antigravityGain
        condition: USE_ANTIGRAVITY
        min: 1
        max: 20
      - name: antigravity_accelerator
        description: "Multiplier for Antigravity gain. The bigger is the difference between actual and filtered throttle input, the bigger Antigravity gain"
        default_value: 1
        field: antigravityAccelerator
        condition: USE_ANTIGRAVITY
        min: 1
        max: 20
      - name: antigravity_cutoff_lpf_hz
        description: "Antigravity cutoff frequenct for Throtte filter. Antigravity is based on the difference between actual and filtered throttle input. The bigger is the difference, the bigger Antigravity gain"
        default_value: 15
        field: antigravityCutoff
        condition: USE_ANTIGRAVITY
        min: 1
        max: 30
      - name: pid_type
        description: "Allows to set type of PID controller used in control loop. Possible values: `NONE`, `PID`, `PIFF`, `AUTO`. Change only in case of experimental platforms like VTOL, tailsitters, rovers, boats, etc. Airplanes should always use `PIFF` and multirotors `PID`"
        field: pidControllerType
        table: pidTypeTable
        default_value: AUTO
      - name: mc_cd_lpf_hz
        description: "Cutoff frequency for Control Derivative. This controls the cutoff for the LPF that is applied to the CD (Feed Forward) signal to the PID controller. Lower value will produce a smoother CD gain to the controller, but it will be more delayed. Higher values will produce CD gain that may have more noise in the signal depending on your RC link but wil be less delayed."
        default_value: 30
        field: controlDerivativeLpfHz
        min: 0
        max: 200
      - name: fw_level_pitch_trim
        description: "Pitch trim for self-leveling flight modes. In degrees. +5 means airplane nose should be raised 5 deg from level"
        default_value: 0
        field: fixedWingLevelTrim
        min: -10
        max: 10
      - name: smith_predictor_strength
        description: "The strength factor of a Smith Predictor of PID measurement. In percents"
        default_value: 0.5
        field: smithPredictorStrength
        condition: USE_SMITH_PREDICTOR
        min: 0
        max: 1
      - name: smith_predictor_delay
        description: "Expected delay of the gyro signal. In milliseconds"
        default_value: 0
        field: smithPredictorDelay
        condition: USE_SMITH_PREDICTOR
        min: 0
        max: 8
      - name: smith_predictor_lpf_hz
        description: "Cutoff frequency for the Smith Predictor Low Pass Filter"
        default_value: 50
        field: smithPredictorFilterHz
        condition: USE_SMITH_PREDICTOR
        min: 1
        max: 500
      - name: fw_level_pitch_gain
        description: "I-gain for the pitch trim for self-leveling flight modes. Higher values means that AUTOTRIM will be faster but might introduce oscillations"
        default_value: 5
        field: fixedWingLevelTrimGain
        min: 0
        max: 20
      - name: fw_iterm_lock_time_max_ms
        description: Defines max time in milliseconds for how long ITerm Lock will shut down Iterm after sticks are release
        default_value: 500
        field: fwItermLockTimeMaxMs
        min: 100
        max: 1000
      - name: fw_iterm_lock_rate_threshold
        description: Defines rate percentage when full P I and D attenuation should happen. 100 disables Iterm Lock for P and D term
        field: fwItermLockRateLimit
        default_value: 40
        min: 10
        max: 100
      - name: fw_iterm_lock_engage_threshold
        description: Defines error rate (in percents of max rate) when Iterm Lock is engaged when sticks are release. Iterm Lock will stay active until error drops below this number
        default_value: 10
        min: 5
        max: 25
        field: fwItermLockEngageThreshold

  - name: PG_PID_AUTOTUNE_CONFIG
    type: pidAutotuneConfig_t
    condition: USE_AUTOTUNE_FIXED_WING
    members:
      - name: fw_autotune_min_stick
        description: "Minimum stick input [%], after applying deadband and expo, to start recording the plane's response to stick input."
        default_value: 50
        field: fw_min_stick
        min: 0
        max: 100
      - name: fw_autotune_rate_adjustment
        description: "`AUTO` and `LIMIT` adjust the rates to match the capabilities of the airplane, with `LIMIT` they are never increased above the starting rates setting. `FIXED` does not adjust the rates. Rates are not changed when tuning in `ANGLE` mode."
        default_value: "AUTO"
        field: fw_rate_adjustment
        table: autotune_rate_adjustment
        type: uint8_t
      - name: fw_autotune_max_rate_deflection
        description: "The target percentage of maximum mixer output used for determining the rates in `AUTO` and `LIMIT`."
        default_value: 90
        field: fw_max_rate_deflection
        min: 50
        max: 100

  - name: PG_POSITION_ESTIMATION_CONFIG
    type: positionEstimationConfig_t
    members:
      - name: inav_auto_mag_decl
        description: "Automatic setting of magnetic declination based on GPS position. When used manual magnetic declination is ignored."
        default_value: ON
        field: automatic_mag_declination
        type: bool
      - name: inav_gravity_cal_tolerance
        description: "Unarmed gravity calibration tolerance level. Won't finish the calibration until estimated gravity error falls below this value."
        default_value: 5
        field: gravity_calibration_tolerance
        min: 0
        max: 255
      - name: inav_allow_dead_reckoning
        description: "Defines if INAV will dead-reckon over short GPS outages. May also be useful for indoors OPFLOW navigation"
        default_value: OFF
        field: allow_dead_reckoning
        type: bool
      - name: inav_allow_gps_fix_estimation
        description: "Defines if inav will estimate GPS fix with magnetometer and barometer on GPS outages. Enables navigation and RTH without GPS fix on fixed wing. Also see failsafe_gps_fix_estimation_delay."
        condition: USE_GPS_FIX_ESTIMATION
        default_value: OFF
        field: allow_gps_fix_estimation
        type: bool
      - name: inav_reset_altitude
        description: "Defines when relative estimated altitude is reset to zero. Variants - `NEVER` (once reference is acquired it's used regardless); `FIRST_ARM` (keep altitude at zero until firstly armed), `EACH_ARM` (altitude is reset to zero on each arming)"
        default_value: "FIRST_ARM"
        field: reset_altitude_type
        table: reset_type
      - name: inav_reset_home
        description: "Allows to chose when the home position is reset. Can help prevent resetting home position after accidental mid-air disarm. Possible values are: NEVER, FIRST_ARM and EACH_ARM"
        default_value: "FIRST_ARM"
        field: reset_home_type
        table: reset_type
      - name: inav_max_surface_altitude
        description: "Max allowed altitude for surface following mode. [cm]"
        default_value: 200
        field: max_surface_altitude
        min: 0
        max: 1000
      - name: inav_w_z_surface_p
        description: "Weight of rangefinder measurements in estimated altitude. Setting is used on both airplanes and multirotors when rangefinder is present and Surface mode enabled"
        field: w_z_surface_p
        min: 0
        max: 100
        default_value: 3.5
      - name: inav_w_z_surface_v
        description: "Weight of rangefinder measurements in estimated climb rate. Setting is used on both airplanes and multirotors when rangefinder is present and Surface mode enabled"
        field: w_z_surface_v
        min: 0
        max: 100
        default_value: 6.1
      - name: inav_w_xy_flow_p
        description: "Weight of optical flow measurements in estimated UAV position."
        field: w_xy_flow_p
        min: 0
        max: 100
        default_value: 1.0
      - name: inav_w_xy_flow_v
        description: "Weight of optical flow measurements in estimated UAV speed."
        field: w_xy_flow_v
        min: 0
        max: 100
        default_value: 2.0
      - name: inav_w_z_baro_p
        description: "Weight of barometer measurements in estimated altitude and climb rate. Setting is used on both airplanes and multirotors."
        field: w_z_baro_p
        min: 0
        max: 10
        default_value: 0.35
      - name: inav_w_z_baro_v
        description: "Weight of barometer climb rate measurements in estimated climb rate. Setting is used on both airplanes and multirotors."
        field: w_z_baro_v
        min: 0
        max: 10
        default_value: 0.1
      - name: inav_w_z_gps_p
        description: "Weight of GPS altitude measurements in estimated altitude. Setting is used on both airplanes and multirotors."
        field: w_z_gps_p
        min: 0
        max: 10
        default_value: 0.2
      - name: inav_w_z_gps_v
        description: "Weight of GPS climb rate measurements in estimated climb rate. Setting is used on both airplanes and multirotors."
        field: w_z_gps_v
        min: 0
        max: 10
        default_value: 0.1
      - name: inav_w_xy_gps_p
        description: "Weight of GPS coordinates in estimated UAV position and speed."
        default_value: 1.0
        field: w_xy_gps_p
        min: 0
        max: 10
      - name: inav_w_xy_gps_v
        description: "Weight of GPS velocity data in estimated UAV speed"
        default_value: 2.0
        field: w_xy_gps_v
        min: 0
        max: 10
      - name: inav_w_z_res_v
        description: "Decay coefficient for estimated climb rate when baro/GPS reference for altitude is lost"
        default_value: 0.5
        field: w_z_res_v
        min: 0
        max: 10
      - name: inav_w_xy_res_v
        description: "Decay coefficient for estimated velocity when GPS reference for position is lost"
        default_value: 0.5
        field: w_xy_res_v
        min: 0
        max: 10
      - name: inav_w_acc_bias
        description: "Weight for accelerometer drift estimation"
        default_value: 0.01
        field: w_acc_bias
        min: 0
        max: 1
      - name: inav_max_eph_epv
        description: "Maximum uncertainty value until estimated position is considered valid and is used for navigation [cm]"
        default_value: 1000
        field: max_eph_epv
        min: 0
        max: 9999
      - name: inav_baro_epv
        description: "Uncertainty value for barometric sensor [cm]"
        default_value: 100
        field: baro_epv
        min: 0
        max: 9999
      - name: inav_default_alt_sensor
        description: "Sets the default altitude sensor to use. Settings GPS and BARO always use both sensors unless there is an altitude error between the sensors that exceeds a set limit. In this case only the selected sensor will be used while the altitude error limit is exceeded. GPS error limit = 2 * inav_max_eph_epv. BARO error limit = 4 * inav_baro_epv. Settings GPS_ONLY and BARO_ONLY will use only the selected sensor even if the other sensor is working. The other sensor will only be used as a backup if the selected sensor is no longer available to use."
        default_value: "GPS"
        field: default_alt_sensor
        table: default_altitude_source

  - name: PG_NAV_CONFIG
    type: navConfig_t
    headers: ["navigation/navigation.h"]
    members:
      - name: nav_disarm_on_landing
        description: "If set to ON, INAV disarms the FC after landing"
        default_value: ON
        field: general.flags.disarm_on_landing
        type: bool
      - name: nav_land_detect_sensitivity
        description: "Changes sensitivity of landing detection. Higher values increase speed of detection but also increase risk of false detection. Default value should work in most cases."
        default_value: 5
        field: general.land_detect_sensitivity
        min: 1
        max: 15
      - name: nav_landing_bump_detection
        description: "Allows immediate landing detection based on G bump at touchdown when set to ON. Requires a barometer and GPS and currently only works for multirotors (Note: will work during Failsafe without need for a GPS)."
        default_value: OFF
        field: general.flags.landing_bump_detection
        type: bool
      - name: nav_mc_inverted_crash_detection
        description: "Setting a value > 0 enables inverted crash detection for multirotors. It will auto disarm in situations where the multirotor has crashed inverted on the ground and can't be manually disarmed due to loss of control or for some other reason. When enabled this setting defines the additional number of seconds before disarm beyond a minimum fixed time delay of 3s. Requires a barometer to work."
        default_value: 0
        field: mc.inverted_crash_detection
        min: 0
        max: 15
      - name: nav_mc_althold_throttle
        description: "If set to STICK the FC remembers the throttle stick position when enabling ALTHOLD and treats it as the neutral midpoint for holding altitude. If set to MID_STICK or HOVER the neutral midpoint is set to the mid stick position or the hover throttle position respectively."
        default_value: "STICK"
        field: mc.althold_throttle_type
        table: nav_mc_althold_throttle
      - name: nav_extra_arming_safety
        description: "If set to ON drone won't arm if no GPS fix and any navigation mode like RTH or POSHOLD is configured. ALLOW_BYPASS allows the user to momentarily disable this check by holding yaw high (left stick held at the bottom right in mode 2) when switch arming is used"
        default_value: "ALLOW_BYPASS"
        field: general.flags.extra_arming_safety
        table: nav_extra_arming_safety
      - name: nav_user_control_mode
        description: "Defines how Pitch/Roll input from RC receiver affects flight in POSHOLD mode: ATTI - pitch/roll controls attitude like in ANGLE mode; CRUISE - pitch/roll controls velocity in forward and right direction."
        default_value: "ATTI"
        field: general.flags.user_control_mode
        table: nav_user_control_mode
      - name: nav_position_timeout
        description: "If GPS fails wait for this much seconds before switching to emergency landing mode (0 - disable)"
        default_value: 5
        field: general.pos_failure_timeout
        min: 0
        max: 10
      - name: nav_wp_load_on_boot
        description: "If set to ON, waypoints will be automatically loaded from EEPROM to the FC during startup."
        default_value: OFF
        field: general.waypoint_load_on_boot
        type: bool
      - name: nav_wp_radius
        description: "Waypoint radius [cm]. Waypoint would be considered reached if machine is within this radius"
        default_value: 100
        field: general.waypoint_radius
        min: 10
        max: 10000
      - name: nav_wp_enforce_altitude
        description: "Forces craft to achieve the set WP altitude as well as position before moving to next WP. Position is held and altitude adjusted as required before moving on. 0 = disabled, otherwise setting defines altitude capture tolerance [cm], e.g. 100 means required altitude is achieved when within 100cm of waypoint altitude setting."
        default_value: 0
        field: general.waypoint_enforce_altitude
        min: 0
        max: 2000
      - name: nav_wp_max_safe_distance
        description: "First waypoint in the mission should be closer than this value [m]. A value of 0 disables this check."
        default_value: 100
        field: general.waypoint_safe_distance
        min: 0
        max: 1500
      - name: nav_wp_mission_restart
        description: "Sets restart behaviour for a WP mission when interrupted mid mission. START from first WP, RESUME from last active WP or SWITCH between START and RESUME each time WP Mode is reselected ON. SWITCH effectively allows resuming once only from a previous mid mission waypoint after which the mission will restart from the first waypoint."
        default_value: "RESUME"
        field: general.flags.waypoint_mission_restart
        table: nav_wp_mission_restart
      - name: nav_wp_multi_mission_index
        description: "Index of active mission selected from multi mission WP entry loaded in flight controller. Limited to a maximum of 9 missions."
        default_value: 1
        field: general.waypoint_multi_mission_index
        condition: USE_MULTI_MISSION
        min: 1
        max: 9
      - name: nav_fw_wp_tracking_accuracy
        description: "Waypoint tracking accuracy forces the craft to quickly head toward and track along the waypoint course line as closely as possible. Setting adjusts tracking deadband distance fom waypoint courseline [m]. Tracking isn't actively controlled within the deadband providing smoother flight adjustments but less accurate tracking. A 2m deadband should work OK in most cases. Setting to 0 disables waypoint tracking accuracy."
        default_value: 0
        field: fw.wp_tracking_accuracy
        min: 0
        max: 10
      - name: nav_fw_wp_tracking_max_angle
        description: "Sets the maximum allowed alignment convergence angle to the waypoint course line when nav_fw_wp_tracking_accuracy is active [degrees]. Lower values result in smoother alignment with the course line but will take more distance until this is achieved."
        default_value: 60
        field: fw.wp_tracking_max_angle
        min: 30
        max: 80
      - name: nav_fw_wp_turn_smoothing
        description: "Smooths turns during WP missions by switching to a loiter turn at waypoints. When set to ON the craft will reach the waypoint during the turn. When set to ON-CUT the craft will turn inside the waypoint without actually reaching it (cuts the corner)."
        default_value: "OFF"
        field: fw.wp_turn_smoothing
        table: nav_fw_wp_turn_smoothing
      - name: nav_auto_speed
        description: "Speed in fully autonomous modes (RTH, WP) [cm/s]. Used for WP mode when no specific WP speed set. [Multirotor only]"
        default_value: 500
        field: general.auto_speed
        min: 10
        max: 2000
      - name: nav_min_ground_speed
        description: "Minimum ground speed for navigation flight modes [m/s]. Currently, this only affects fixed wing. Default 7 m/s."
        default_value: 7
        field: general.min_ground_speed
        min: 6
        max: 50
      - name: nav_max_auto_speed
        description: "Maximum speed allowed in fully autonomous modes (RTH, WP) [cm/s] [Multirotor only]"
        default_value: 1000
        field: general.max_auto_speed
        min: 10
        max: 2000
      - name: nav_manual_speed
        description: "Maximum speed allowed when processing pilot input for POSHOLD/CRUISE control mode [cm/s] [Multirotor only]"
        default_value: 750
        field: general.max_manual_speed
        min: 10
        max: 2000
      - name: nav_land_minalt_vspd
        description: "Vertical descent velocity under nav_land_slowdown_minalt during the RTH landing phase. [cm/s]"
        default_value: 50
        field: general.land_minalt_vspd
        min: 50
        max: 500
      - name: nav_land_maxalt_vspd
        description: "Vertical descent velocity above nav_land_slowdown_maxalt during the RTH landing phase. [cm/s]"
        default_value: 200
        field: general.land_maxalt_vspd
        min: 100
        max: 2000
      - name: nav_land_slowdown_minalt
        description: "Defines at what altitude the descent velocity should start to be `nav_land_minalt_vspd` [cm]"
        default_value: 500
        field: general.land_slowdown_minalt
        min: 50
        max: 1000
      - name: nav_land_slowdown_maxalt
        description: "Defines at what altitude the descent velocity should start to ramp down from `nav_land_maxalt_vspd` to `nav_land_minalt_vspd` during the RTH landing phase [cm]"
        default_value: 2000
        field: general.land_slowdown_maxalt
        min: 500
        max: 4000
      - name: nav_emerg_landing_speed
        description: "Rate of descent UAV will try to maintain when doing emergency descent sequence [cm/s]"
        default_value: 500
        field: general.emerg_descent_rate
        min: 100
        max: 2000
      - name: nav_min_rth_distance
        description: "Minimum distance from homepoint when RTH full procedure will be activated [cm]. Below this distance, the mode will activate at the current location and the final phase is executed (loiter / land). Above this distance, the full procedure is activated, which may include initial climb and flying directly to the homepoint before entering the loiter / land phase."
        default_value: 500
        field: general.min_rth_distance
        min: 0
        max: 5000
      - name: nav_overrides_motor_stop
        description: "When set to OFF the navigation system will not take over the control of the motor if the throttle is low (motor will stop). When set to OFF_ALWAYS the navigation system will not take over the control of the motor if the throttle was low even when failsafe is triggered. When set to AUTO_ONLY the navigation system will only take over the control of the throttle in autonomous navigation modes (NAV WP and NAV RTH). When set to ALL_NAV (default) the navigation system will take over the control of the motor completely and never allow the motor to stop even when the throttle is low. This setting only has an effect on NAV modes which take control of the throttle when combined with MOTOR_STOP and is likely to cause a stall if fw_min_throttle_down_pitch isn't set correctly or the pitch estimation is wrong for fixed wing models when not set to ALL_NAV"
        default_value: "ALL_NAV"
        field: general.flags.nav_overrides_motor_stop
        table: nav_overrides_motor_stop
      - name: nav_fw_soaring_motor_stop
        description: "Stops motor when Soaring mode enabled."
        default_value: OFF
        field: general.flags.soaring_motor_stop
        type: bool
      - name: nav_fw_soaring_pitch_deadband
        description: "Pitch Angle deadband when soaring mode enabled (deg). Angle mode inactive within deadband allowing pitch to free float whilst soaring."
        default_value: 5
        field: fw.soaring_pitch_deadband
        min: 0
        max: 15
      - name: nav_rth_climb_first
        description: "If set to ON or ON_FW_SPIRAL aircraft will climb to nav_rth_altitude first before turning to head home. If set to OFF aircraft will turn and head home immediately climbing on the way. For a fixed wing ON will use a linear climb, ON_FW_SPIRAL will use a loiter turning climb with climb rate set by nav_auto_climb_rate, turn rate set by nav_fw_loiter_radius (ON_FW_SPIRAL is a fixed wing setting and behaves the same as ON for a multirotor)"
        default_value: "ON"
        field: general.flags.rth_climb_first
        table: nav_rth_climb_first
      - name: nav_rth_climb_first_stage_mode
        description: "This determines how rth_climb_first_stage_altitude is used. Default is AT_LEAST."
        default_value: "AT_LEAST"
        field: general.flags.rth_climb_first_stage_mode
        table: nav_rth_climb_first_stage_modes
      - name: nav_rth_climb_first_stage_altitude
        description: "The altitude [cm] at which climb first will transition to turn first. How the altitude is used, is determined by nav_rth_climb_first_stage_mode. Default=0; feature disabled."
        default_value: 0
        field: general.rth_climb_first_stage_altitude
        max: 65000
      - name: nav_rth_climb_ignore_emerg
        description: "If set to ON, aircraft will execute initial climb regardless of position sensor (GPS) status."
        default_value: OFF
        field: general.flags.rth_climb_ignore_emerg
        type: bool
      - name: nav_rth_tail_first
        description: "If set to ON drone will return tail-first. Obviously meaningless for airplanes."
        default_value: OFF
        field: general.flags.rth_tail_first
        type: bool
      - name: nav_rth_allow_landing
        description: "If set to ON drone will land as a last phase of RTH."
        default_value: "ALWAYS"
        field: general.flags.rth_allow_landing
        table: nav_rth_allow_landing
      - name: nav_rth_fs_landing_delay
        description: "If landing is active on Failsafe and this is above 0. The aircraft will hover or loiter for X seconds before performing the landing. If the battery enters the warning or critical levels, the land will proceed. Default = 0 [seconds]"
        default_value: 0
        min: 0
        max: 1800
        field: general.rth_fs_landing_delay
      - name: nav_rth_alt_mode
        description: "Configure how the aircraft will manage altitude on the way home, see Navigation modes on wiki for more details"
        default_value: "AT_LEAST"
        field: general.flags.rth_alt_control_mode
        table: nav_rth_alt_mode
      - name: nav_rth_alt_control_override
        description: "If set to ON RTH altitude and CLIMB FIRST settings can be overridden during the RTH climb phase using full pitch or roll stick held for > 1 second. RTH altitude is reset to the current altitude using pitch down stick. RTH CLIMB FIRST is overridden using right roll stick so craft turns and heads directly to home (CLIMB FIRST override only works for fixed wing)"
        default_value: OFF
        field: general.flags.rth_alt_control_override
        type: bool
      - name: nav_rth_abort_threshold
        description: "RTH sanity checking feature will notice if distance to home is increasing during RTH and once amount of increase exceeds the threshold defined by this parameter, instead of continuing RTH machine will enter emergency landing, self-level and go down safely. Default is 500m which is safe enough for both multirotor machines and airplanes. Set to 0 to disable. [cm]"
        default_value: 50000
        field: general.rth_abort_threshold
        max: 65000
        min: 0
      - name: nav_max_terrain_follow_alt
        field: general.max_terrain_follow_altitude
        default_value: "100"
        description: "Max allowed above the ground altitude for terrain following mode [cm]"
        max: 1000
        default_value: 100
      - name: nav_max_altitude
        field: general.max_altitude
        description: "Max allowed altitude (above Home Point) that applies to all NAV modes (including Altitude Hold). 0 means limit is disabled"
        default_value: 0
        max: 65000
        min: 0
      - name: nav_rth_altitude
        description: "Used in EXTRA, FIXED and AT_LEAST rth alt modes [cm] (Default 1000 means 10 meters)"
        default_value: 1000
        field: general.rth_altitude
        max: 65000
      - name: nav_rth_home_altitude
        description: "Aircraft will climb/descend to this altitude after reaching home if landing is not enabled. Set to 0 to stay at `nav_rth_altitude` (default) [cm]"
        default_value: 0
        field: general.rth_home_altitude
        max: 65000
      - name: nav_rth_linear_descent_start_distance
        description: The distance [m] away from home to start the linear descent. 0 = immediately (original linear descent behaviour)
        default_value: 0
        min: 0
        max: 10000
        field: general.rth_linear_descent_start_distance
      - name: nav_rth_use_linear_descent
        description: If enabled, the aircraft will gradually descent to the nav_rth_home_altitude en route. The distance from home to start the descent can be set with `nav_rth_linear_descent_start_distance`.
        default_value: OFF
        type: bool
        field: general.flags.rth_use_linear_descent
      - name: nav_rth_trackback_mode
        description: "Useage modes for RTH Trackback. OFF = disabled, ON = Normal and Failsafe RTH, FS = Failsafe RTH only."
        default_value: "OFF"
        field: general.flags.rth_trackback_mode
        table: rth_trackback_mode
      - name: nav_rth_trackback_distance
        description: "Maximum distance allowed for RTH trackback. Normal RTH is executed once this distance is exceeded [m]."
        default_value: 500
        field: general.rth_trackback_distance
        max: 2000
        min: 50
      - name: safehome_max_distance
        description: "In order for a safehome to be used, it must be less than this distance (in cm) from the arming point."
        default_value: 20000
        field: general.safehome_max_distance
        min: 0
        max: 65000
      - name: safehome_usage_mode
        description: "Used to control when safehomes will be used. Possible values are `OFF`, `RTH` and `RTH_FS`.  See [Safehome documentation](Safehomes.md#Safehome) for more information."
        default_value: "RTH"
        field: general.flags.safehome_usage_mode
        table: safehome_usage_mode
      - name: nav_mission_planner_reset
        description: "With Reset ON WP Mission Planner waypoint count can be reset to 0 by toggling the mode switch ON-OFF-ON."
        default_value: ON
        field: general.flags.mission_planner_reset
        type: bool
      - name: nav_cruise_yaw_rate
        description: "Max YAW rate when NAV COURSE HOLD/CRUISE mode is enabled. Set to 0 to disable on fixed wing (Note: On multirotor setting to 0 will disable Course Hold/Cruise mode completely) [dps]"
        default_value: 60
        field: general.cruise_yaw_rate
        min: 0
        max: 120
      - name: nav_mc_bank_angle
        description: "Maximum banking angle (deg) that multicopter navigation is allowed to set. Machine must be able to satisfy this angle without loosing altitude"
        default_value: 35
        field: mc.max_bank_angle
        min: 15
        max: 45
      - name: nav_mc_auto_climb_rate
        description: "Maximum climb/descent rate that UAV is allowed to reach during navigation modes. [cm/s]"
        default_value: 500
        field: mc.max_auto_climb_rate
        min: 10
        max: 2000
      - name: nav_mc_manual_climb_rate
        description: "Maximum climb/descent rate firmware is allowed when processing pilot input for ALTHOLD control mode [cm/s]"
        default_value: 200
        field: mc.max_manual_climb_rate
        min: 10
        max: 2000
      - name: nav_auto_disarm_delay
        description: "Delay before craft disarms when `nav_disarm_on_landing` is set (ms)"
        default_value: 1000
        field: general.auto_disarm_delay
        min: 100
        max: 10000
      - name: nav_mc_braking_speed_threshold
        description: "min speed in cm/s above which braking can happen"
        default_value: 100
        field: mc.braking_speed_threshold
        condition: USE_MR_BRAKING_MODE
        min: 0
        max: 1000
      - name: nav_mc_braking_disengage_speed
        description: "braking is disabled when speed goes below this value"
        default_value: 75
        field: mc.braking_disengage_speed
        condition: USE_MR_BRAKING_MODE
        min: 0
        max: 1000
      - name: nav_mc_braking_timeout
        description: "timeout in ms for braking"
        default_value: 2000
        field: mc.braking_timeout
        condition: USE_MR_BRAKING_MODE
        min: 100
        max: 5000
      - name: nav_mc_braking_boost_factor
        description: "acceleration factor for BOOST phase"
        default_value: 100
        field: mc.braking_boost_factor
        condition: USE_MR_BRAKING_MODE
        min: 0
        max: 200
      - name: nav_mc_braking_boost_timeout
        description: "how long in ms BOOST phase can happen"
        default_value: 750
        field: mc.braking_boost_timeout
        condition: USE_MR_BRAKING_MODE
        min: 0
        max: 5000
      - name: nav_mc_braking_boost_speed_threshold
        description: "BOOST can be enabled when speed is above this value"
        default_value: 150
        field: mc.braking_boost_speed_threshold
        condition: USE_MR_BRAKING_MODE
        min: 100
        max: 1000
      - name: nav_mc_braking_boost_disengage_speed
        description: "BOOST will be disabled when speed goes below this value"
        default_value: 100
        field: mc.braking_boost_disengage_speed
        condition: USE_MR_BRAKING_MODE
        min: 0
        max: 1000
      - name: nav_mc_braking_bank_angle
        description: "max angle that MR is allowed to bank in BOOST mode"
        default_value: 40
        field: mc.braking_bank_angle
        condition: USE_MR_BRAKING_MODE
        min: 15
        max: 60
      - name: nav_mc_pos_deceleration_time
        description: "Used for stoping distance calculation. Stop position is computed as _speed_ * _nav_mc_pos_deceleration_time_ from the place where sticks are released. Braking mode overrides this setting"
        default_value: 120
        field: mc.posDecelerationTime
        min: 0
        max: 255
      - name: nav_mc_pos_expo
        description: "Expo for PosHold control"
        default_value: 10
        field: mc.posResponseExpo
        min: 0
        max: 255
      - name: nav_mc_wp_slowdown
        description: "When ON, NAV engine will slow down when switching to the next waypoint. This prioritizes turning over forward movement. When OFF, NAV engine will continue to the next waypoint and turn as it goes."
        default_value: ON
        field: mc.slowDownForTurning
        type: bool
      - name: nav_fw_bank_angle
        description: "Max roll angle when rolling / turning in GPS assisted modes, is also restrained by global max_angle_inclination_rll"
        default_value: 35
        field: fw.max_bank_angle
        min: 5
        max: 80
      - name: nav_fw_auto_climb_rate
        description: "Maximum climb/descent rate that UAV is allowed to reach during navigation modes. [cm/s]"
        default_value: 500
        field: fw.max_auto_climb_rate
        min: 10
        max: 2000
      - name: nav_fw_manual_climb_rate
        description: "Maximum climb/descent rate firmware is allowed when processing pilot input for ALTHOLD control mode [cm/s]"
        default_value: 300
        field: fw.max_manual_climb_rate
        min: 10
        max: 2500
      - name: nav_fw_climb_angle
        description: "Max pitch angle when climbing in GPS assisted modes, is also restrained by global max_angle_inclination_pit"
        default_value: 20
        field: fw.max_climb_angle
        min: 5
        max: 80
      - name: nav_fw_dive_angle
        description: "Max negative pitch angle when diving in GPS assisted modes, is also restrained by global max_angle_inclination_pit"
        default_value: 15
        field: fw.max_dive_angle
        min: 5
        max: 80
      - name: nav_fw_pitch2thr_smoothing
        description:  "How smoothly the autopilot makes pitch to throttle correction inside a deadband defined by pitch_to_throttle_thresh."
        default_value: 6
        field: fw.pitch_to_throttle_smooth
        min: 0
        max: 9
      - name: fw_min_throttle_down_pitch
        description: "Automatic pitch down angle when throttle is at 0 in angle mode. Progressively applied between cruise throttle and zero throttle (decidegrees)"
        default_value: 0
        field: fw.minThrottleDownPitchAngle
        min: 0
        max: 450
      - name: nav_fw_pitch2thr_threshold
        description: "Threshold from average pitch where momentary pitch_to_throttle correction kicks in. [decidegrees]"
        default_value: 50
        field: fw.pitch_to_throttle_thresh
        min: 0
        max: 900
      - name: nav_fw_loiter_radius
        description: "PosHold radius. 3000 to 7500 is a good value (30-75m) [cm]"
        default_value: 7500
        field: fw.loiter_radius
        min: 0
        max: 30000
      - name: fw_loiter_direction
        description: "Direction of loitering: center point on right wing (clockwise - default), or center point on left wing (counterclockwise). If equal YAW then can be changed in flight using a yaw stick."
        default_value: "RIGHT"
        field: fw.loiter_direction
        table: direction
      - name: nav_fw_cruise_speed
        description: "Speed for the plane/wing at cruise throttle used for remaining flight time/distance estimation in cm/s"
        default_value: 0
        field: fw.cruise_speed
        min: 0
        max: 65535
      - name: nav_fw_control_smoothness
        description: "How smoothly the autopilot controls the airplane to correct the navigation error"
        default_value: 0
        field: fw.control_smoothness
        min: 0
        max: 9
      - name: nav_fw_land_dive_angle
        description: "Dive angle that airplane will use during final landing phase. During dive phase, motor is stopped or IDLE and roll control is locked to 0 degrees"
        default_value: 2
        field: fw.land_dive_angle
        min: -20
        max: 20
      - name: nav_fw_launch_velocity
        description: "Forward velocity threshold for swing-launch detection [cm/s]"
        default_value: 300
        field: fw.launch_velocity_thresh
        min: 100
        max: 10000
      - name: nav_fw_launch_accel
        description: "Forward acceleration threshold for bungee launch or throw launch [cm/s/s], 1G = 981 cm/s/s"
        default_value: 1863
        field: fw.launch_accel_thresh
        min: 1350
        max: 20000
      - name: nav_fw_launch_max_angle
        description: "Max tilt angle (pitch/roll combined) to consider launch successful. Set to 180 to disable completely [deg]"
        default_value: 45
        field: fw.launch_max_angle
        min: 5
        max: 180
      - name: nav_fw_launch_detect_time
        description: "Time for which thresholds have to breached to consider launch happened [ms]"
        default_value: 40
        field: fw.launch_time_thresh
        min: 10
        max: 1000
      - name: nav_fw_launch_idle_motor_delay
        description: "Delay between raising throttle and motor starting at idle throttle (ms)"
        default_value: 0
        field: fw.launch_idle_motor_timer
        min: 0
        max: 60000
      - name: nav_fw_launch_wiggle_to_wake_idle
        description: "Trigger the idle throttle by wiggling the plane. 0 = disabled. 1 and 2 signify 1 or 2 yaw wiggles to activate. 1 wiggle has a higher detection point, for airplanes without a tail. 2 wiggles has a lower detection point, but requires the repeated action. This is intended for larger models and airplanes with tails."
        field: fw.launch_wiggle_wake_idle
        type: uint8_t
        default_value: 0
        min: 0
        max: 2
      - name: nav_fw_launch_motor_delay
        description: "Delay between detected launch and launch sequence start and throttling up (ms)"
        default_value: 500
        field: fw.launch_motor_timer
        min: 0
        max: 5000
      - name: nav_fw_launch_spinup_time
        description: "Time to bring power from minimum throttle to nav_fw_launch_thr - to avoid big stress on ESC and large torque from propeller"
        default_value: 100
        field: fw.launch_motor_spinup_time
        min: 0
        max: 1000
      - name: nav_fw_launch_end_time
        description: "Time for the transition of throttle and pitch angle, between the launch state and the subsequent flight mode [ms]"
        default_value: 3000
        field: fw.launch_end_time
        min: 0
        max: 5000
      - name: nav_fw_launch_min_time
        description: "Allow launch mode to execute at least this time (ms) and ignore stick movements [0-60000]."
        default_value: 0
        field: fw.launch_min_time
        min: 0
        max: 60000
      - name: nav_fw_launch_timeout
        description: "Maximum time for launch sequence to be executed. After this time LAUNCH mode will be turned off and regular flight mode will take over (ms)"
        default_value: 5000
        field: fw.launch_timeout
        max: 60000
      - name: nav_fw_launch_max_altitude
        description: "Altitude (centimeters) at which LAUNCH mode will be turned off and regular flight mode will take over [0-60000]."
        default_value: 0
        field: fw.launch_max_altitude
        min: 0
        max: 60000
      - name: nav_fw_launch_climb_angle
        description: "Climb angle (attitude of model, not climb slope) for launch sequence (degrees), is also restrained by global max_angle_inclination_pit"
        default_value: 18
        field: fw.launch_climb_angle
        min: 5
        max: 45
      - name: nav_fw_launch_manual_throttle
        description: "Allows launch with manually controlled throttle. INAV only levels wings and controls climb pitch during launch. Throttle is controlled directly by throttle stick movement. IF USED WITHOUT A GPS LOCK plane must be launched immediately after throttle is increased to avoid issues with climb out stabilisation and the launch ending sooner than expected (launch end timer starts as soon as the throttle stick is raised)."
        default_value: OFF
        field: fw.launch_manual_throttle
        type: bool
      - name: nav_fw_launch_land_abort_deadband
        description: "Launch and landing abort stick deadband in [r/c points], applied after r/c deadband and expo. The Roll/Pitch stick needs to be deflected beyond this deadband to abort the launch or landing."
        default_value: 100
        field: fw.launch_land_abort_deadband
        min: 2
        max: 250
      - name: nav_fw_allow_manual_thr_increase
        description: "Enable the possibility to manually increase the throttle in auto throttle controlled modes for fixed wing"
        default_value: OFF
        field: fw.allow_manual_thr_increase
        type: bool
      - name: nav_use_fw_yaw_control
        description: "Enables or Disables the use of the heading PID controller on fixed wing. Heading PID controller is always enabled for rovers and boats"
        default_value: OFF
        field: fw.useFwNavYawControl
        type: bool
      - name: nav_fw_yaw_deadband
        description: "Deadband for heading trajectory PID controller. When heading error is below the deadband, controller assumes that vehicle is on course"
        default_value: 0
        field: fw.yawControlDeadband
        min: 0
        max: 90

  - name: PG_TELEMETRY_CONFIG
    type: telemetryConfig_t
    headers: ["io/serial.h", "telemetry/telemetry.h", "telemetry/sim.h"]
    condition: USE_TELEMETRY
    members:
      - name: telemetry_switch
        description: "Which aux channel to use to change serial output & baud rate (MSP / Telemetry). It disables automatic switching to Telemetry when armed."
        default_value: OFF
        type: bool
      - name: telemetry_inverted
        description: "Determines if the telemetry protocol default signal inversion is reversed. This should be OFF in most cases unless a custom or hacked RX is used."
        default_value: OFF
        type: bool
      - name: frsky_pitch_roll
        description: "S.Port telemetry: Send pitch and roll degrees*10 instead of raw accelerometer data"
        default_value: OFF
        type: bool
      - name: frsky_use_legacy_gps_mode_sensor_ids
        description: "S.Port telemetry: If `ON`, send the legacy telemetry IDs for modes (Tmp1) and GNSS (Tmp2). These are old IDs, deprecated, and will be removed in INAV 10.0. Tools and scripts using these IDs should be updated to use the new IDs of **470** for Modes and **480** for GNSS. Default: 'OFF'"
        default_value: OFF
        type: bool
      - name: report_cell_voltage
        description: "S.Port and IBUS telemetry: Send the average cell voltage if set to ON"
        default_value: OFF
        type: bool
      - name: hott_alarm_sound_interval
        description: "Battery alarm delay in seconds for Hott telemetry"
        default_value: 5
        field: hottAlarmSoundInterval
        min: 0
        max: 120
      - name: telemetry_halfduplex
        description: "S.Port telemetry only: Turn UART into UNIDIR for usage on F1 and F4 target. See Telemetry.md for details"
        default_value: ON
        field: halfDuplex
        type: bool
      - name: smartport_fuel_unit
        description: "S.Port telemetry only: Unit of the value sent with the `FUEL` ID (FrSky D-Series always sends percent). [PERCENT/MAH/MWH]"
        default_value: "MAH"
        field: smartportFuelUnit
        condition: USE_TELEMETRY_SMARTPORT
        type: uint8_t
        table: smartport_fuel_unit
      - name: ibus_telemetry_type
        description: "Type compatibility ibus telemetry for transmitters. See Telemetry.md label IBUS for details."
        default_value: 0
        field: ibusTelemetryType
        min: 0
        max: 255
      - name: ltm_update_rate
        description: "Defines the LTM update rate (use of bandwidth [NORMAL/MEDIUM/SLOW]). See Telemetry.md, LTM section for details."
        default_value: "NORMAL"
        field: ltmUpdateRate
        condition: USE_TELEMETRY_LTM
        table: ltm_rates
      - name: sim_ground_station_number
        description: "Number of phone that is used to communicate with SIM module. Messages / calls from other numbers are ignored. If undefined, can be set by calling or sending a message to the module."
        default_value: ""
        field: simGroundStationNumber
        condition: USE_TELEMETRY_SIM
      - name: sim_pin
        description: "PIN code for the SIM module"
        default_value: "0000"
        field: simPin
        condition: USE_TELEMETRY_SIM
      - name: sim_transmit_interval
        description: "Text message transmission interval in seconds for SIM module. Minimum value: 10"
        default_value: 60
        field: simTransmitInterval
        condition: USE_TELEMETRY_SIM
        type: uint16_t
        min: SIM_MIN_TRANSMIT_INTERVAL
        max: 65535
      - name: sim_transmit_flags
        description: "Bitmask specifying text message transmit condition flags for the SIM module. 1: continuous transmission, 2: continuous transmission in failsafe mode, 4: continuous transmission when GPS signal quality is low, 8: acceleration events, 16: continuous transmission when altitude is below `sim_low_altitude`"
        default_value: :SIM_TX_FLAG_FAILSAFE
        field: simTransmitFlags
        condition: USE_TELEMETRY_SIM
        max: 63
      - name: acc_event_threshold_high
        description: "Acceleration threshold [cm/s/s] for impact / high g event text messages sent by SIM module. Acceleration values greater than 4 g can occur in fixed wing flight without an impact, so a setting of 4000 or greater is suggested. 0 = detection off."
        default_value: 0
        field: accEventThresholdHigh
        condition: USE_TELEMETRY_SIM
        type: uint16_t
        min: 0
        max: 65535
      - name: acc_event_threshold_low
        description: "Acceleration threshold [cm/s/s] for low-g / freefall detection text messages sent by SIM module. A setting of less than 100 is suggested. Valid values: [0-900], 0 = detection off."
        default_value: 0
        field: accEventThresholdLow
        condition: USE_TELEMETRY_SIM
        type: uint16_t
        min: 0
        max: 900
      - name: acc_event_threshold_neg_x
        description: "Acceleration threshold [cm/s/s] for backwards acceleration / fixed wing landing detection text messages sent by SIM module. Suggested value for fixed wing: 1100. 0 = detection off."
        default_value: 0
        field: accEventThresholdNegX
        condition: USE_TELEMETRY_SIM
        type: uint16_t
        min: 0
        max: 65535
      - name: sim_low_altitude
        description: "Threshold for low altitude warning messages sent by SIM module when the 'L' transmit flag is set in `sim_transmit_flags`."
        default_value: -32767
        field: simLowAltitude
        condition: USE_TELEMETRY_SIM
        type: int16_t
        min: INT16_MIN
        max: INT16_MAX
      - name: mavlink_ext_status_rate
        field: mavlink.extended_status_rate
        description: "Rate of the extended status message for MAVLink telemetry"
        type: uint8_t
        min: 0
        max: 255
        default_value: 2
      - name: mavlink_rc_chan_rate
        description: "Rate of the RC channels message for MAVLink telemetry"
        field: mavlink.rc_channels_rate
        type: uint8_t
        min: 0
        max: 255
        default_value: 1
      - name: mavlink_pos_rate
        description: "Rate of the position message for MAVLink telemetry"
        field: mavlink.position_rate
        type: uint8_t
        min: 0
        max: 255
        default_value: 2
      - name: mavlink_extra1_rate
        description: "Rate of the extra1 message for MAVLink telemetry"
        field: mavlink.extra1_rate
        type: uint8_t
        min: 0
        max: 255
        default_value: 2
      - name: mavlink_extra2_rate
        description: "Rate of the extra2 message for MAVLink telemetry"
        field: mavlink.extra2_rate
        type: uint8_t
        min: 0
        max: 255
        default_value: 2
      - name: mavlink_extra3_rate
        description: "Rate of the extra3 message for MAVLink telemetry"
        field: mavlink.extra3_rate
        type: uint8_t
        min: 0
        max: 255
        default_value: 1
      - name: mavlink_version
        field: mavlink.version
        description: "Version of MAVLink to use"
        type: uint8_t
        min: 1
        max: 2
        default_value: 2
      - name: mavlink_min_txbuffer
        field: mavlink.min_txbuff
        description: "Minimum percent of TX buffer space free, before attempting to transmit telemetry. Requuires RADIO_STATUS messages to be processed. 0 = always transmits."
        default_value: 33
        min: 0
        max: 100
      - name: mavlink_radio_type
        description: "Mavlink radio type. Affects how RSSI and LQ are reported on OSD."
        field: mavlink.radio_type
        table: mavlink_radio_type
        default_value: "GENERIC"
        type: uint8_t

  - name: PG_OSD_CONFIG
    type: osdConfig_t
    headers: ["io/osd.h", "drivers/osd.h"]
    condition: USE_OSD
    members:
      - name: osd_telemetry
        description: "To enable OSD telemetry for antenna tracker. Possible values are `OFF`, `ON` and `TEST`"
        table: osd_telemetry
        field: telemetry
        type: uint8_t
        default_value: "OFF"
      - name: osd_video_system
        description: "Video system used. Possible values are `AUTO`, `PAL`, `NTSC`, `HDZERO`, 'DJIWTF', 'AVATAR' and `BF43COMPAT`"
        default_value: "AUTO"
        table: osd_video_system
        field: video_system
        type: uint8_t
      - name: osd_row_shiftdown
        description: "Number of rows to shift the OSD display (increase if top rows are cut off)"
        default_value: 0
        field: row_shiftdown
        min: 0
        max: 1
      - name: osd_msp_displayport_fullframe_interval
        description: "Full Frame redraw interval for MSP DisplayPort [deciseconds]. This is how often a full frame update is sent to the DisplayPort, to cut down on OSD artifacting. The default value should be fine for most pilots. Though long range pilots may benefit from increasing the refresh time, especially near the edge of range. -1 = disabled (legacy mode) | 0 = every frame (not recommended) | default = 10 (1 second)"
        default_value: 10
        min: -1
        max: 600
        type: int16_t
        field: msp_displayport_fullframe_interval
      - name: osd_units
        description: "IMPERIAL, METRIC, UK"
        default_value: "METRIC"
        field: units
        table: osd_unit
        type: uint8_t
      - name: osd_stats_energy_unit
        description: "Unit used for the drawn energy in the OSD stats [MAH/WH] (milliAmpere hour/ Watt hour)"
        default_value: "MAH"
        field: stats_energy_unit
        table: osd_stats_energy_unit
        type: uint8_t
      - name: osd_stats_page_auto_swap_time
        description: "Auto swap display time interval between disarm stats pages (seconds). Reverts to manual control when Roll stick used to change pages. Disabled when set to 0."
        default_value: 3
        field: stats_page_auto_swap_time
        min: 0
        max: 10
      - name: osd_stats_show_metric_efficiency
        description: "Enabling this option will show metric efficiency statistics on the post flight stats screen. In addition to the efficiency statistics in your chosen units."
        default_value: OFF
        type: bool
        field: stats_show_metric_efficiency
      - name: osd_rssi_alarm
        description: "Value below which to make the OSD RSSI indicator blink"
        default_value: 20
        field: rssi_alarm
        min: 0
        max: 100
      - name: osd_time_alarm
        description: "Value above which to make the OSD flight time indicator blink (minutes)"
        default_value: 10
        field: time_alarm
        min: 0
        max: 600
      - name: osd_alt_alarm
        description: "Value above which to make the OSD relative altitude indicator blink (meters)"
        default_value: 100
        field: alt_alarm
        min: 0
        max: 10000
      - name: osd_dist_alarm
        description: "Value above which to make the OSD distance from home indicator blink (meters)"
        default_value: 1000
        field: dist_alarm
        min: 0
        max: 50000
      - name: osd_neg_alt_alarm
        description: "Value below which (negative altitude) to make the OSD relative altitude indicator blink (meters)"
        default_value: 5
        field: neg_alt_alarm
        min: 0
        max: 10000
      - name: osd_current_alarm
        description: "Value above which the OSD current consumption element will start blinking. Measured in full Amperes."
        default_value: 0
        field: current_alarm
        min: 0
        max: 255
      - name: osd_gforce_alarm
        description: "Value above which the OSD g force indicator will blink (g)"
        default_value: 5
        field: gforce_alarm
        min: 0
        max: 20
      - name: osd_gforce_axis_alarm_min
        description: "Value under which the OSD axis g force indicators will blink (g)"
        default_value: -5
        field: gforce_axis_alarm_min
        min: -20
        max: 20
      - name: osd_gforce_axis_alarm_max
        description: "Value above which the OSD axis g force indicators will blink (g)"
        default_value: 5
        field: gforce_axis_alarm_max
        min: -20
        max: 20
      - name: osd_imu_temp_alarm_min
        description: "Temperature under which the IMU temperature OSD element will start blinking (decidegrees centigrade)"
        default_value: -200
        field: imu_temp_alarm_min
        min: -550
        max: 1250
      - name: osd_imu_temp_alarm_max
        description: "Temperature above which the IMU temperature OSD element will start blinking (decidegrees centigrade)"
        default_value: 600
        field: imu_temp_alarm_max
        min: -550
        max: 1250
      - name: osd_esc_temp_alarm_max
        description: "Temperature above which the IMU temperature OSD element will start blinking (decidegrees centigrade)"
        default_value: 900
        field: esc_temp_alarm_max
        min: -550
        max: 1500
      - name: osd_esc_temp_alarm_min
        description: "Temperature under which the IMU temperature OSD element will start blinking (decidegrees centigrade)"
        default_value: -200
        field: esc_temp_alarm_min
        min: -550
        max: 1500
      - name: osd_baro_temp_alarm_min
        description: "Temperature under which the baro temperature OSD element will start blinking (decidegrees centigrade)"
        default_value: -200
        field: baro_temp_alarm_min
        condition: USE_BARO
        min: -550
        max: 1250
      - name: osd_baro_temp_alarm_max
        description: "Temperature above which the baro temperature OSD element will start blinking (decidegrees centigrade)"
        default_value: 600
        field: baro_temp_alarm_max
        condition: USE_BARO
        min: -550
        max: 1250
      - name: osd_snr_alarm
        condition: USE_SERIALRX_CRSF || USE_RX_MSP
        description: "Value below which Crossfire SNR Alarm pops-up. (dB)"
        default_value: 4
        field: snr_alarm
        min: -20
        max: 99
      - name: osd_link_quality_alarm
        condition: USE_SERIALRX_CRSF || USE_RX_MSP
        description: "LQ % indicator blinks below this value. For Crossfire use 70%, for Tracer use 50%"
        default_value: 70
        field: link_quality_alarm
        min: 0
        max: 100
      - name: osd_rssi_dbm_alarm
        condition: USE_SERIALRX_CRSF || USE_RX_MSP
        description: "RSSI dBm indicator blinks below this value [dBm]. 0 disables this alarm"
        default_value: 0
        field: rssi_dbm_alarm
        min: -130
        max: 0
      - name: osd_rssi_dbm_max
        condition: USE_SERIALRX_CRSF || USE_RX_MSP
        description: "RSSI dBm upper end of curve. Perfect rssi (max) = 100%"
        default_value: -30
        field: rssi_dbm_max
        min: -50
        max: 0
      - name: osd_rssi_dbm_min
        condition: USE_SERIALRX_CRSF || USE_RX_MSP
        description: "RSSI dBm lower end of curve or RX sensitivity level. Worst rssi (min) = 0%"
        default_value: -120
        field: rssi_dbm_min
        min: -130
        max: 0
      - name: osd_temp_label_align
        description: "Allows to chose between left and right alignment for the OSD temperature sensor labels. Valid values are `LEFT` and `RIGHT`"
        default_value: "LEFT"
        field: temp_label_align
        condition: USE_TEMPERATURE_SENSOR
        table: osd_alignment
        type: uint8_t
      - name: osd_airspeed_alarm_min
        condition: USE_PITOT
        description: "Airspeed under which the airspeed OSD element will start blinking (cm/s)"
        default_value: 0
        field: airspeed_alarm_min
        min: 0
        max: 27000 # (1000km/h * 1000 * 100 / 60 / 60)
      - name: osd_airspeed_alarm_max
        condition: USE_PITOT
        description: "Airspeed above which the airspeed OSD element will start blinking (cm/s)"
        default_value: 0
        field: airspeed_alarm_max
        min: 0
        max: 27000 # (1000km/h * 1000 * 100 / 60 / 60)
      - name: osd_ahi_reverse_roll
        description: "Switches the artificial horizon in the OSD to instead be a bank indicator, by reversing the direction of its movement."
        field: ahi_reverse_roll
        type: bool
        default_value: OFF
      - name: osd_ahi_max_pitch
        description: "Max pitch, in degrees, for OSD artificial horizon"
        default_value: 20
        field: ahi_max_pitch
        min: 10
        max: 90
        default_value: 20
      - name: osd_crosshairs_style
        description: "To set the visual type for the crosshair"
        default_value: "DEFAULT"
        field: crosshairs_style
        table: osd_crosshairs_style
        type: uint8_t
      - name: osd_crsf_lq_format
        description: "To select LQ format"
        default_value: "TYPE1"
        field: crsf_lq_format
        table: osd_crsf_lq_format
        type: uint8_t
      - name: osd_horizon_offset
        description: "To vertically adjust the whole OSD and AHI and scrolling bars"
        default_value: 0
        field: horizon_offset
        min: -2
        max: 2
      - name: osd_camera_uptilt
        description: "Set the camera uptilt for the FPV camera in degres, positive is up, negative is down, relative to the horizontal. Used for correct display of HUD items and AHI (when enabled)."
        default_value: 0
        field: camera_uptilt
        min: -40
        max: 80
      - name: osd_ahi_camera_uptilt_comp
        description: "When set to `ON`, the AHI position is adjusted by `osd_camera_uptilt`. For example, with a cammera uptilt of 30 degrees, the AHI will appear in the middle of the OSD when the aircraft is pitched forward 30 degrees. When set to `OFF`, the AHI will appear in the center of the OSD regardless of camera angle, but can still be shifted up and down using `osd_horizon_offset` (`osd_ahi_vertical_offset` for pixel-OSD)."
        default_value: OFF
        field: ahi_camera_uptilt_comp
        type: bool
      - name: osd_camera_fov_h
        description: "Horizontal field of view for the camera in degres"
        default_value: 135
        field: camera_fov_h
        min: 60
        max: 150
      - name: osd_camera_fov_v
        description: "Vertical field of view for the camera in degres"
        default_value: 85
        field: camera_fov_v
        min: 30
        max: 120
      - name: osd_hud_margin_h
        description: "Left and right margins for the hud area"
        default_value: 3
        field: hud_margin_h
        min: 0
        max: 4
      - name: osd_hud_margin_v
        description: "Top and bottom margins for the hud area"
        default_value: 3
        field: hud_margin_v
        min: 1
        max: 3
      - name: osd_hud_homing
        description: "To display little arrows around the crossair showing where the home point is in the hud"
        default_value: OFF
        field: hud_homing
        type: bool
      - name: osd_hud_homepoint
        description: "To 3D-display the home point location in the hud"
        default_value: OFF
        field: hud_homepoint
        type: bool
      - name: osd_hud_radar_disp
        description: "Maximum count of nearby aircrafts or points of interest to display in the hud, as sent from an ESP32 LoRa module. Set to 0 to disable (show nothing). The nearby aircrafts will appear as markers A, B, C, etc"
        default_value: 0
        field: hud_radar_disp
        min: 0
        max: 4
      - name: osd_hud_radar_range_min
        description: "In meters, radar aircrafts closer than this will not be displayed in the hud"
        default_value: 3
        field: hud_radar_range_min
        min: 1
        max: 30
      - name: osd_hud_radar_range_max
        description: "In meters, radar aircrafts further away than this will not be displayed in the hud"
        default_value: 4000
        field: hud_radar_range_max
        min: 100
        max: 9990
      - name: osd_hud_radar_alt_difference_display_time
        description: "Time in seconds to display the altitude difference in radar"
        field: hud_radar_alt_difference_display_time
        min: 0
        max: 10
        default_value: 3
      - name: osd_hud_radar_distance_display_time
        description: "Time in seconds to display the distance in radar"
        field: hud_radar_distance_display_time
        min: 1
        max: 10
        default_value: 3
      - name: osd_radar_peers_display_time
        description: "Time in seconds to display next peer "
        field: radar_peers_display_time
        min: 1
        max: 10
        default_value: 3
      - name: osd_hud_wp_disp
        description: "How many navigation waypoints are displayed, set to 0 (zero) to disable. As sample, if set to 2, and you just passed the 3rd waypoint of the mission, you'll see markers for the 4th waypoint (marked 1) and the 5th waypoint (marked 2)"
        default_value: 0
        field: hud_wp_disp
        min: 0
        max: 3
      - name: osd_left_sidebar_scroll
        description: "Scroll type for the left sidebar"
        field: left_sidebar_scroll
        table: osd_sidebar_scroll
        type: uint8_t
        default_value: NONE
      - name: osd_right_sidebar_scroll
        description: "Scroll type for the right sidebar"
        field: right_sidebar_scroll
        table: osd_sidebar_scroll
        type: uint8_t
        default_value: NONE
      - name: osd_sidebar_scroll_arrows
        description: "Show arrows for scrolling the sidebars"
        field: sidebar_scroll_arrows
        type: bool
        default_value: OFF
      - name: osd_main_voltage_decimals
        description: "Number of decimals for the battery voltages displayed in the OSD [1-2]."
        default_value: 1
        field: main_voltage_decimals
        min: 1
        max: 2
      - name: osd_decimals_altitude
        description: "Number of decimals for the altitude displayed in the OSD [3-5]."
        default_value: 3
        field: decimals_altitude
        type: uint8_t
        min: 3
        max: 5
      - name: osd_decimals_distance
        description: "Number of decimals for distance displayed in the OSD [3-5]. This includes distance from home, total distance, and distance remaining."
        default_value: 3
        field: decimals_distance
        type: uint8_t
        min: 3
        max: 5
      - name: osd_coordinate_digits
        description: "Number of digits for the coordinates displayed in the OSD [8-11]."
        field: coordinate_digits
        min: 8
        max: 11
        default_value: 9
      - name: osd_adsb_distance_warning
        description: "Distance in meters of ADSB aircraft that is displayed"
        default_value: 20000
        condition: USE_ADSB
        field: adsb_distance_warning
        min: 1
        max: 64000
        type: uint16_t
      - name: osd_adsb_distance_alert
        description: "Distance inside which ADSB data flashes for proximity warning"
        default_value: 3000
        condition: USE_ADSB
        field: adsb_distance_alert
        min: 1
        max: 64000
        type: uint16_t
      - name: osd_adsb_ignore_plane_above_me_limit
        description: "Ignore adsb planes above, limit, 0 disabled (meters)"
        default_value: 0
        condition: USE_ADSB
        field: adsb_ignore_plane_above_me_limit
        min: 0
        max: 64000
        type: uint16_t
      - name: osd_estimations_wind_compensation
        description: "Use wind estimation for remaining flight time/distance estimation"
        default_value: ON
        condition: USE_WIND_ESTIMATOR
        field: estimations_wind_compensation
        type: bool
      - name: osd_estimations_wind_mps
        description: "Wind speed estimation in m/s"
        default_value: OFF
        condition: USE_WIND_ESTIMATOR
        field: estimations_wind_mps
        type: bool
      - name: osd_failsafe_switch_layout
        description: "If enabled the OSD automatically switches to the first layout during failsafe"
        default_value: OFF
        type: bool
      - name: osd_plus_code_digits
        description: "Numer of plus code digits before shortening with `osd_plus_code_short`. Precision at the equator: 10=13.9x13.9m; 11=2.8x3.5m; 12=56x87cm; 13=11x22cm."
        field: plus_code_digits
        default_value: 11
        min: 10
        max: 13
      - name: osd_plus_code_short
        description: "Number of leading digits removed from plus code. Removing 2, 4 and 6 digits requires a reference location within, respectively, ~800km, ~40 km and ~2km to recover the original coordinates."
        field: plus_code_short
        default_value: "0"
        table: osd_plus_code_short
      - name: osd_ahi_style
        description: "Sets OSD Artificial Horizon style \"DEFAULT\" or \"LINE\" for the FrSky Graphical OSD."
        field: ahi_style
        default_value: "DEFAULT"
        table: osd_ahi_style
        type: uint8_t
      - name: osd_force_grid
        field: force_grid
        type: bool
        default_value: OFF
        description: Force OSD to work in grid mode even if the OSD device supports pixel level access (mainly used for development)
      - name: osd_ahi_bordered
        field: ahi_bordered
        type: bool
        description: Shows a border/corners around the AHI region (pixel OSD only)
        default_value: OFF
      - name: osd_ahi_width
        field: ahi_width
        max: 255
        description: AHI width in pixels (pixel OSD only)
        default_value: 132
      - name: osd_ahi_height
        field: ahi_height
        max: 255
        description: AHI height in pixels (pixel OSD only)
        default_value: 162
      - name: osd_ahi_vertical_offset
        field: ahi_vertical_offset
        min: -128
        max: 127
        description: AHI vertical offset from center (pixel OSD only)
        default_value: -18
      - name: osd_sidebar_horizontal_offset
        field: sidebar_horizontal_offset
        min: -128
        max: 127
        default_value: 0
        description: Sidebar horizontal offset from default position. Positive values move the sidebars closer to the edges.
      - name: osd_left_sidebar_scroll_step
        field: left_sidebar_scroll_step
        max: 255
        default_value: 0
        description: How many units each sidebar step represents. 0 means the default value for the scroll type.
      - name: osd_right_sidebar_scroll_step
        field: right_sidebar_scroll_step
        max: 255
        default_value: 0
        description: Same as left_sidebar_scroll_step, but for the right sidebar
      - name: osd_sidebar_height
        field: sidebar_height
        min: 0
        max: 5
        default_value: 3
        description: Height of sidebars in rows. 0 leaves only the level indicator arrows (Not for pixel OSD)
      - name: osd_ahi_pitch_interval
        field: ahi_pitch_interval
        min: 0
        max: 30
        default_value: 0
        description: Draws AHI at increments of the set pitch interval over the full pitch range. AHI line is drawn with ends offset when pitch first exceeds interval with offset increasing with increasing pitch. Offset direction changes between climb and dive. Set to 0 to disable (Not for pixel OSD)
      - name: osd_home_position_arm_screen
        type: bool
        default_value: ON
        description: Should home position coordinates be displayed on the arming screen.
      - name: osd_pan_servo_index
        description: Index of the pan servo, used to adjust osd home heading direction based on camera pan. Note that this feature does not work with continiously rotating servos.
        field: pan_servo_index
        min: 0
        max: 16
        default_value: 0
      - name: osd_pan_servo_pwm2centideg
        description: Centidegrees of pan servo rotation us PWM signal. A servo with 180 degrees of rotation from 1000 to 2000 us PWM typically needs `18` for this setting. Change sign to inverse direction.
        field: pan_servo_pwm2centideg
        default_value: 0
        min: -36
        max: 36
      - name: osd_pan_servo_offcentre_warning
        description: Degrees either side of the pan servo centre; where it is assumed camera is wanted to be facing forwards, but isn't at 0. If in this range and not 0 for longer than 10 seconds, the pan servo offset OSD element will blink. 0 means the warning is disabled.
        field: pan_servo_offcentre_warning
        min: 0
        max: 45
        default_value: 10
      - name: osd_pan_servo_indicator_show_degrees
        description: Show the degress of offset from centre on the pan servo OSD display element.
        field: pan_servo_indicator_show_degrees
        type: bool
        default_value: OFF
      - name: osd_esc_rpm_precision
        description: Number of characters used to display the RPM value.
        field: esc_rpm_precision
        min: 3
        max: 6
        default_value: 3
      - name: osd_mah_precision
        description: Number of digits used for mAh precision. Currently used by mAh Used and Battery Remaining Capacity
        field: mAh_precision
        default: 4
        min: 3
        max: 6
        default_value: 4
      - name: osd_use_pilot_logo
        description: Use custom pilot logo with/instead of the INAV logo. The pilot logo must be characters 473 to 511
        field: use_pilot_logo
        type: bool
        default_value: OFF
      - name: osd_inav_to_pilot_logo_spacing
        description: The space between the INAV and pilot logos, if `osd_use_pilot_logo` is `ON`. This number may be adjusted so that it fits the odd/even col width displays. For example, if using an odd column width display, such as Walksnail, and this is set to 4. 1 will be added so that the logos are equally spaced from the centre of the screen.
        field: inav_to_pilot_logo_spacing
        min: 0
        max: 20
        default_value: 8
      - name: osd_arm_screen_display_time
        description: Amount of time to display the arm screen [ms]
        field: arm_screen_display_time
        min: 1000
        max: 5000
        default_value: 1500
      - name: osd_system_msg_display_time
        description: System message display cycle time for multiple messages (milliseconds).
        field: system_msg_display_time
        default_value: 1000
        min: 500
        max: 5000
      - name: osd_highlight_djis_missing_font_symbols
        description: Show question marks where there is no symbol in the DJI font to represent the INAV OSD element's symbol. When off, blank spaces will be used. Only relevent for DJICOMPAT modes.
        field: highlight_djis_missing_characters
        default_value: ON
        type: bool
      - name: enable_broken_o4_workaround
        field: enable_broken_o4_workaround
        description: DJI O4 release firmware has a broken MSP DisplayPort implementation. This enables a workaround to restore ARM detection.
        condition: USE_DJI_HD_OSD
        default_value: OFF
        type: bool
      - name: osd_switch_indicator_zero_name
        description: "Character to use for OSD switch incicator 0."
        field: osd_switch_indicator0_name
        type: string
        max: 5
        default_value: "FLAP"
      - name: osd_switch_indicator_one_name
        description: "Character to use for OSD switch incicator 1."
        field: osd_switch_indicator1_name
        type: string
        max: 5
        default_value: "GEAR"
      - name: osd_switch_indicator_two_name
        description: "Character to use for OSD switch incicator 2."
        field: osd_switch_indicator2_name
        type: string
        max: 5
        default_value: "CAM"
      - name: osd_switch_indicator_three_name
        description: "Character to use for OSD switch incicator 3."
        field: osd_switch_indicator3_name
        type: string
        max: 5
        default_value: "LIGT"
      - name: osd_switch_indicator_zero_channel
        description: "RC Channel to use for OSD switch indicator 0."
        field: osd_switch_indicator0_channel
        min: 5
        max: MAX_SUPPORTED_RC_CHANNEL_COUNT
        default_value: 5
      - name: osd_switch_indicator_one_channel
        description: "RC Channel to use for OSD switch indicator 1."
        field: osd_switch_indicator1_channel
        min: 5
        max: MAX_SUPPORTED_RC_CHANNEL_COUNT
        default_value: 5
      - name: osd_switch_indicator_two_channel
        description: "RC Channel to use for OSD switch indicator 2."
        field: osd_switch_indicator2_channel
        min: 5
        max: MAX_SUPPORTED_RC_CHANNEL_COUNT
        default_value: 5
      - name: osd_switch_indicator_three_channel
        description: "RC Channel to use for OSD switch indicator 3."
        field: osd_switch_indicator3_channel
        min: 5
        max: MAX_SUPPORTED_RC_CHANNEL_COUNT
        default_value: 5
      - name: osd_switch_indicators_align_left
        description: "Align text to left of switch indicators"
        field: osd_switch_indicators_align_left
        type: bool
        default_value: ON
  - name: PG_OSD_COMMON_CONFIG
    type: osdCommonConfig_t
    headers: ["io/osd_common.h"]
    condition: USE_OSD || USE_DJI_HD_OSD
    members:
      - name: osd_speed_source
        description: "Sets the speed type displayed by the DJI OSD and OSD canvas (FrSky Pixel): GROUND, 3D, AIR"
        default_value: "GROUND"
        field: speedSource
        table: osdSpeedSource
        type: uint8_t

  - name: PG_SYSTEM_CONFIG
    type: systemConfig_t
    headers: ["fc/config.h"]
    members:
      - name: i2c_speed
        description: "This setting controls the clock speed of I2C bus. 400KHZ is the default that most setups are able to use. Some noise-free setups may be overclocked to 800KHZ. Some sensor chips or setups with long wires may work unreliably at 400KHZ - user can try lowering the clock speed to 200KHZ or even 100KHZ. User need to bear in mind that lower clock speeds might require higher looptimes (lower looptime rate)"
        default_value: "400KHZ"
        condition: USE_I2C
        table: i2c_speed
      - name: debug_mode
        description: "Defines debug values exposed in debug variables (developer / debugging setting)"
        default_value: "NONE"
        table: debug_modes
      - name: ground_test_mode
        description: "For developer ground test use. Disables motors, sets heading status = Trusted on FW."
        condition: USE_DEV_TOOLS
        default_value: OFF
        field: groundTestMode
        type: bool
      - name: throttle_tilt_comp_str
        description: "Can be used in ANGLE and HORIZON mode and will automatically boost throttle when banking. Setting is in percentage, 0=disabled."
        default_value: 0
        field: throttle_tilt_compensation_strength
        min: 0
        max: 100
      - name: name
        description: "Craft name"
        default_value: ""
        type: string
        field: craftName
        max: MAX_NAME_LENGTH
      - name: pilot_name
        description: "Pilot name"
        default_value: ""
        type: string
        field: pilotName
        max: MAX_NAME_LENGTH

  - name: PG_MODE_ACTIVATION_OPERATOR_CONFIG
    type: modeActivationOperatorConfig_t
    headers: ["fc/rc_modes.h"]
    members:
      - name: mode_range_logic_operator
        description: "Control how Mode selection works in flight modes. If you example have Angle mode configured on two different Aux channels, this controls if you need both activated ( AND ) or if you only need one activated ( OR ) to active angle mode."
        default_value: "OR"
        field: modeActivationOperator
        table: aux_operator
        type: uint8_t

  - name: PG_STATS_CONFIG
    type: statsConfig_t
    headers: ["fc/stats.h"]
    condition: USE_STATS
    members:
      - name: stats
        description: "General switch of the statistics recording feature (a.k.a. odometer)"
        default_value: OFF
        field: stats_enabled
        type: bool
      - name: stats_total_time
        description: "Total flight time [in seconds]. The value is updated on every disarm when \"stats\" are enabled."
        default_value: 0
        max: INT32_MAX
      - name: stats_total_dist
        description: "Total flight distance [in meters]. The value is updated on every disarm when \"stats\" are enabled."
        default_value: 0
        max: INT32_MAX
      - name: stats_total_energy
        description: "Total energy consumption [in mWh]. The value is updated on every disarm when \"stats\" are enabled."
        max: INT32_MAX
        condition: USE_ADC
        default_value: 0

  - name: PG_TIME_CONFIG
    type: timeConfig_t
    headers: ["common/time.h"]
    members:
      - name: tz_offset
        description: "Time zone offset from UTC, in minutes. This is applied to the GPS time for logging and time-stamping of Blackbox logs"
        default_value: 0
        min: -720
        max: 840
      - name: tz_automatic_dst
        description: "Automatically add Daylight Saving Time to the GPS time when needed or simply ignore it. Includes presets for EU and the USA - if you live outside these areas it is suggested to manage DST manually via `tz_offset`."
        default_value: "OFF"
        type: uint8_t
        table: tz_automatic_dst

  - name: PG_DISPLAY_CONFIG
    type: displayConfig_t
    headers: ["drivers/display.h"]
    members:
      - name: display_force_sw_blink
        description: "OFF = OSD hardware blink / ON = OSD software blink. If OSD warning text/values are invisible, try setting this to ON"
        default_value: OFF
        field: force_sw_blink
        type: bool

  - name: PG_VTX_CONFIG
    type: vtxConfig_t
    headers: ["io/vtx_control.h"]
    condition: USE_VTX_CONTROL
    members:
      - name: vtx_halfduplex
        description: "Use half duplex UART to communicate with the VTX, using only a TX pin in the FC."
        default_value: ON
        field: halfDuplex
        type: bool
      - name: vtx_smartaudio_early_akk_workaround
        description: "Enable workaround for early AKK SAudio-enabled VTX bug."
        default_value: ON
        field: smartAudioEarlyAkkWorkaroundEnable
        type: bool
      - name: vtx_smartaudio_alternate_softserial_method
        description: "Enable the alternate softserial method. This is the method used in INAV 3.0 and ealier."
        default_value: ON
        field: smartAudioAltSoftSerialMethod
        type: bool
      - name: vtx_softserial_shortstop
        description: "Enable the 3x shorter stopbit on softserial. Need for some IRC Tramp VTXes."
        default_value: OFF
        field: softSerialShortStop
        type: bool
      - name: vtx_smartaudio_stopbits
        description: "Set stopbit count for serial (TBS Sixty9 SmartAudio 2.1 require value of 1 bit)"
        default_value: 2
        field: smartAudioStopBits
        min: 1
        max: 2

  - name: PG_VTX_SETTINGS_CONFIG
    type: vtxSettingsConfig_t
    headers: ["drivers/vtx_common.h", "io/vtx.h"]
    condition: USE_VTX_SMARTAUDIO || USE_VTX_TRAMP
    members:
      - name: vtx_band
        description: "Configure the VTX band. Bands: 1: A, 2: B, 3: E, 4: F, 5: Race."
        default_value: 1
        field: band
        min: VTX_SETTINGS_MIN_BAND
        max: VTX_SETTINGS_MAX_BAND
      - name: vtx_channel
        description: "Channel to use within the configured `vtx_band`. Valid values are [1, 8]."
        default_value: 1
        field: channel
        min: VTX_SETTINGS_MIN_CHANNEL
        max: VTX_SETTINGS_MAX_CHANNEL
      - name: vtx_power
        description: "VTX RF power level to use. The exact number of mw depends on the VTX hardware."
        default_value: 1
        field: power
        min: VTX_SETTINGS_MIN_POWER
        max: VTX_SETTINGS_MAX_POWER
      - name: vtx_low_power_disarm
        description: "When the craft is disarmed, set the VTX to its lowest power. `ON` will set the power to its minimum value on startup, increase it to `vtx_power` when arming and change it back to its lowest setting after disarming. `UNTIL_FIRST_ARM` will start with minimum power, but once the craft is armed it will increase to `vtx_power` and it will never decrease until the craft is power cycled."
        default_value: "OFF"
        field: lowPowerDisarm
        table: vtx_low_power_disarm
        type: uint8_t
      - name: vtx_pit_mode_chan
        description: "Pit mode channel."
        field: pitModeChan
        min: VTX_SETTINGS_MIN_CHANNEL
        max: VTX_SETTINGS_MAX_CHANNEL
        default_value: 1
      - name: vtx_max_power_override
        description:  "Some VTXes may report max power incorrectly (i.e. 200mW for a 600mW VTX). Use this to override max supported power. 0 to disable and use whatever VTX reports as its capabilities"
        default_value: 0
        field: maxPowerOverride
        min: 0
        max: 10000
      - name: vtx_frequency_group
        field: frequencyGroup
        description: "VTx Frequency group to use. Frequency groups: FREQUENCYGROUP_5G8: 5.8GHz, FREQUENCYGROUP_2G4: 2.4GHz, FREQUENCYGROUP_1G3: 1.3GHz."
        table: vtx_frequency_groups
        min: 0
        max: 2
        default_value: FREQUENCYGROUP_5G8

  - name: PG_PINIOBOX_CONFIG
    type: pinioBoxConfig_t
    headers: ["io/piniobox.h"]
    condition: USE_PINIOBOX
    members:
      - name: pinio_box1
        field: permanentId[0]
        description: "Mode assignment for PINIO#1"
        default_value: "target specific"
        min: 0
        max: 255
        default_value: :BOX_PERMANENT_ID_NONE
        type: uint8_t
      - name: pinio_box2
        field: permanentId[1]
        default_value: "target specific"
        description: "Mode assignment for PINIO#1"
        min: 0
        max: 255
        default_value: :BOX_PERMANENT_ID_NONE
        type: uint8_t
      - name: pinio_box3
        field: permanentId[2]
        default_value: "target specific"
        description: "Mode assignment for PINIO#1"
        min: 0
        max: 255
        default_value: :BOX_PERMANENT_ID_NONE
        type: uint8_t
      - name: pinio_box4
        field: permanentId[3]
        default_value: "target specific"
        description: "Mode assignment for PINIO#1"
        min: 0
        max: 255
        default_value: :BOX_PERMANENT_ID_NONE
        type: uint8_t

  - name: PG_LOG_CONFIG
    type: logConfig_t
    headers: ["common/log.h"]
    condition: USE_LOG
    members:
        - name: log_level
          field: level
          table: log_level
          description: "Defines serial debugging log level. See `docs/development/serial_printf_debugging.md` for usage."
          default_value: "ERROR"
        - name: log_topics
          field: topics
          min: 0
          max: UINT32_MAX
          description: "Defines serial debugging log topic. See `docs/development/serial_printf_debugging.md` for usage."
          default_value: 0

  - name: PG_ESC_SENSOR_CONFIG
    type: escSensorConfig_t
    headers: ["sensors/esc_sensor.h"]
    condition: USE_ESC_SENSOR
    members:
        - name: esc_sensor_listen_only
          default_value: OFF
          description: "Enable when BLHeli32 Auto Telemetry function is used. Disable in every other case"
          field: listenOnly
          type: bool
          default_value: OFF

  - name: PG_SMARTPORT_MASTER_CONFIG
    type: smartportMasterConfig_t
    headers: ["io/smartport_master.h"]
    condition: USE_SMARTPORT_MASTER
    members:
      - name: smartport_master_halfduplex
        field: halfDuplex
        type: bool
        default_value: ON
      - name: smartport_master_inverted
        field: inverted
        type: bool
        default_value: OFF

  - name: PG_DJI_OSD_CONFIG
    type: djiOsdConfig_t
    headers: ["io/osd_dji_hd.h"]
    condition: USE_DJI_HD_OSD
    members:
        - name: dji_use_name_for_messages
          description: "Re-purpose the craft name field for messages."
          default_value: ON
          field: use_name_for_messages
          type: bool
        - name: dji_esc_temp_source
          description: "Re-purpose the ESC temperature field for IMU/BARO temperature"
          default_value: "ESC"
          field: esc_temperature_source
          table: djiOsdTempSource
          type: uint8_t
        - name: dji_message_speed_source
          description: "Sets the speed type displayed by the DJI OSD in craft name: GROUND, 3D, AIR"
          default_value: "3D"
          field: messageSpeedSource
          table: osdSpeedSource
          type: uint8_t
        - name: dji_rssi_source
          description: "Source of the DJI RSSI field: RSSI, CRSF_LQ"
          default_value: "RSSI"
          field: rssi_source
          table: djiRssiSource
          type: uint8_t
        - name: dji_use_adjustments
          description: "Show inflight adjustments in craft name field"
          default_value: OFF
          type: bool
          field: useAdjustments
        - name: dji_cn_alternating_duration
          description: "Alternating duration of craft name elements, in tenths of a second"
          default_value: 30
          min: 1
          max: 150
          field: craftNameAlternatingDuration
          type: uint8_t

  - name: PG_BEEPER_CONFIG
    type: beeperConfig_t
    headers: [ "fc/config.h" ]
    members:
      - name: dshot_beeper_enabled
        description: "Whether using DShot motors as beepers is enabled"
        default_value: ON
        field: dshot_beeper_enabled
        type: bool
      - name: dshot_beeper_tone
        description: "Sets the DShot beeper tone"
        min: 1
        max: 5
        default_value: 1
        field: dshot_beeper_tone
        type: uint8_t
      - name: beeper_pwm_mode
        field: pwmMode
        type: bool
        default_value: OFF
        description: "Allows disabling PWM mode for beeper on some targets. Switch from ON to OFF if the external beeper sound is weak. Do not switch from OFF to ON without checking if the board supports PWM beeper mode"

  - name: PG_POWER_LIMITS_CONFIG
    type: powerLimitsConfig_t
    headers: ["flight/power_limits.h"]
    condition: USE_POWER_LIMITS
    members:
      - name: limit_pi_p
        description: "Throttle attenuation PI control P term"
        default_value: 100
        field: piP
        max: 10000
      - name: limit_pi_i
        description: "Throttle attenuation PI control I term"
        default_value: 100
        field: piI
        max: 10000
      - name: limit_attn_filter_cutoff
        description: "Throttle attenuation PI control output filter cutoff frequency"
        default_value: 1.2
        field: attnFilterCutoff
        max: 100

  - name: PG_LEDPIN_CONFIG
    type: ledPinConfig_t
    headers: ["drivers/light_ws2811strip.h"]
    members:
      - name: led_pin_pwm_mode
        condition: USE_LED_STRIP
        description: "PWM mode of LED pin."
        default_value: "SHARED_LOW"
        field: led_pin_pwm_mode
        table: led_pin_pwm_mode

  - name: PG_OSD_JOYSTICK_CONFIG
    type: osdJoystickConfig_t
    headers: ["io/osd_joystick.h"]
    condition: USE_RCDEVICE && USE_LED_STRIP
    members:
      - name: osd_joystick_enabled
        description: "Enable OSD Joystick emulation"
        default_value: OFF
        field: osd_joystick_enabled
        type: bool
      - name: osd_joystick_down
        description: "PWM value for DOWN key"
        default_value: 0
        field: osd_joystick_down
        min: 0
        max: 100
      - name: osd_joystick_up
        description: "PWM value for UP key"
        default_value: 48
        field: osd_joystick_up
        min: 0
        max: 100
      - name: osd_joystick_left
        description: "PWM value for LEFT key"
        default_value: 63
        field: osd_joystick_left
        min: 0
        max: 100
      - name: osd_joystick_right
        description: "PWM value for RIGHT key"
        default_value: 28
        field: osd_joystick_right
        min: 0
        max: 100
      - name: osd_joystick_enter
        description: "PWM value for ENTER key"
        default_value: 75
        field: osd_joystick_enter
        min: 0
        max: 100

  - name: PG_FW_AUTOLAND_CONFIG
    type: navFwAutolandConfig_t
    headers: ["navigation/navigation.h"]
    condition: USE_FW_AUTOLAND
    members:
      - name: nav_fw_land_approach_length
        description: "Length of the final approach"
        default_value: 35000
        field: approachLength
        min: 100
        max: 100000
      - name: nav_fw_land_final_approach_pitch2throttle_mod
        description: "Modifier for pitch to throttle ratio at final approach. In Percent."
        default_value: 100
        field: finalApproachPitchToThrottleMod
        min: 100
        max: 400
      - name: nav_fw_land_glide_alt
        description: "Initial altitude of the glide phase"
        default_value: 200
        field: glideAltitude
        min: 100
        max: 5000
      - name: nav_fw_land_flare_alt
        description: "Initial altitude of the flare phase"
        default_value: 150
        field: flareAltitude
        min: 0
        max: 10000
      - name: nav_fw_land_glide_pitch
        description: "Pitch value for glide phase. In degrees."
        default_value: 0
        field: glidePitch
        min: -15
        max: 45
      - name: nav_fw_land_flare_pitch
        description: "Pitch value for flare phase. In degrees"
        default_value: 8
        field: flarePitch
        min: -15
        max: 45
      - name: nav_fw_land_max_tailwind
        description: "Max. tailwind (in cm/s) if no landing direction with downwind is available"
        default_value: 140
        field: maxTailwind
        min: 0
        max: 3000
  - name: PG_GIMBAL_CONFIG
    type: gimbalConfig_t
    headers: ["drivers/gimbal_common.h"]
    condition: USE_SERIAL_GIMBAL
    members:
      - name: gimbal_pan_channel
        description: "Gimbal pan rc channel index. 0 is no channel."
        default_value: 0
        field: panChannel
        min: 0
        max: 32
      - name: gimbal_roll_channel
        description: "Gimbal roll rc channel index. 0 is no channel."
        default_value: 0
        field: rollChannel
        min: 0
        max: 32
      - name: gimbal_tilt_channel
        description: "Gimbal tilt rc channel index. 0 is no channel."
        default_value: 0
        field: tiltChannel
        min: 0
        max: 32
      - name: gimbal_sensitivity
        description: "Gimbal sensitivity is similar to gain and will affect how quickly the gimbal will react."
        default_value: 0
        field: sensitivity
        min: -16
        max: 15
      - name: gimbal_pan_trim
        field: panTrim
        description: "Trim gimbal pan center position."
        default_value: 0
        min: -500
        max: 500
      - name: gimbal_tilt_trim
        field: tiltTrim
        description: "Trim gimbal tilt center position."
        default_value: 0
        min: -500
        max: 500
      - name: gimbal_roll_trim
        field: rollTrim
        description: "Trim gimbal roll center position."
        default_value: 0
        min: -500
        max: 500
  - name: PG_GIMBAL_SERIAL_CONFIG
    type: gimbalSerialConfig_t
    headers: ["io/gimbal_serial.h"]
    condition: USE_SERIAL_GIMBAL
    members:
    - name: gimbal_serial_single_uart
      description: "Gimbal serial and headtracker device share same UART. FC RX goes to headtracker device, FC TX goes to gimbal."
      type: bool
      default_value: OFF
      field: singleUart
  - name: PG_HEADTRACKER_CONFIG
    type: headTrackerConfig_t
    headers: ["drivers/headtracker_common.h"]
    condition: USE_HEADTRACKER
    members:
    - name: headtracker_type
      description: "Type of headtrackr dervice"
      default_value: "NONE"
      field: devType
      type: uint8_t
      table: headtracker_dev_type
    - name: headtracker_pan_ratio
      description: "Head pan movement vs camera movement ratio"
      type: float
      default_value: 1
      field: pan_ratio
      min: 0
      max: 5
    - name: headtracker_tilt_ratio
      description: "Head tilt movement vs camera movement ratio"
      type: float
      default_value: 1
      field: tilt_ratio
      min: 0
      max: 5
    - name: headtracker_roll_ratio
      description: "Head roll movement vs camera movement ratio"
      type: float
      default_value: 1
      field: roll_ratio
      min: 0
      max: 5
  - name: PG_GEOZONE_CONFIG
    type: geozone_config_t
    headers: ["navigation/navigation.h"]
    condition: USE_GEOZONE && USE_GPS
    members:
      - name: geozone_detection_distance
        description: "Distance from which a geozone is detected"
        default_value: 50000
        field: fenceDetectionDistance
        min: 0
        max: 1000000
      - name: geozone_avoid_altitude_range
        description: "Altitude range in which an attempt is made to avoid a geozone upwards"
        default_value: 5000
        field: avoidAltitudeRange
        min: 0
        max: 1000000
      - name: geozone_safe_altitude_distance
        description: "Vertical distance that must be maintained to the upper and lower limits of the zone."
        default_value: 1000
        field: safeAltitudeDistance
        min: 0
        max: 10000
      - name: geozone_safehome_as_inclusive
        description: "Treat nearest safehome as inclusive geozone"
        type: bool
        field: nearestSafeHomeAsInclusivZone
        default_value: OFF
      - name: geozone_safehome_zone_action
        description:  "Fence action for safehome zone"
        default_value: "NONE"
        field: safeHomeFenceAction
        table: fence_action
        type: uint8_t
      - name: geozone_mr_stop_distance
        description: "Distance in which multirotors stops before the border"
        default_value: 15000
        min: 0
        max: 100000
        field: copterFenceStopDistance
      - name: geozone_no_way_home_action
        description: "Action if RTH with active geozones is unable to calculate a course to home"
        default_value: RTH
        field: noWayHomeAction
        table: geozone_rth_no_way_home
        type: uint8_t
