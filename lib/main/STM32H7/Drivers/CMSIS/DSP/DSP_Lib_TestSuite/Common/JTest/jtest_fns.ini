
FUNC void ban_line_thick (void)
{
    printf("==================================================\n");
}

FUNC void ban_line_thin (void)
{
    printf("--------------------------------------------------\n");
}

FUNC void test_start_msg (void)
{
    ban_line_thick();
    printf("Start: Test\n");
    ban_line_thick();
}

FUNC void test_end_msg (void)
{
    ban_line_thick();
    printf("End: Test\n");
    ban_line_thick();
}


FUNC void group_start_msg (void)
{
    ban_line_thick();
    printf("Start: Group\n");
    ban_line_thick();
}

FUNC void group_end_msg (void)
{
    ban_line_thick();
    printf("End: Group\n");
    ban_line_thick();
}


FUNC void coverage_clear (void)
{
    exec("COVERAGE CLEAR");
}

FUNC void coverage_msg(void)
{
    ban_line_thin();
    printf("Start: Coverage Information\n");
    ban_line_thin();
    exec("COVERAGE");
    ban_line_thin();
    printf("End: Coverage Information\n");
    ban_line_thin();
}

FUNC void break_fn (void)
{
    _sleep_(5000);
    exec("_break_ = 1");
}

FUNC void exit_fn (void)
{
    exec("EXIT");
}

FUNC void debug_clean_fn (void)
{
    exec("BK *");
    exit_fn();
}

FUNC void debug_setup_finished_msg (void)
{
    ban_line_thick();
    printf("Debug Setup Finished\n");
    ban_line_thick();
}

FUNC void dump_str_fn (void)
{
    ban_line_thin();
    printf("Start Dump: String\n");
    ban_line_thin();
    exec("D JTEST_FW.str_buffer");
    ban_line_thin();
    printf("End Dump: String\n");
    ban_line_thin();
}

FUNC void dump_data_fn (void)
{
    ban_line_thin();
    printf("Start Dump: Data\n");
    ban_line_thin();
    exec("D JTEST_FW.data_buffer");
    ban_line_thin();
    printf("End Dump: Data\n");
    ban_line_thin();
}

FUNC void log_off_fn(void)
{
    exec("LOG OFF") ;
}
